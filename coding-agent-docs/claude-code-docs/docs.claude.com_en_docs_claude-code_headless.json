{
  "markdown": "[Claude Docs home page![light logo](https://mintcdn.com/anthropic-claude-docs/DcI2Ybid7ZEnFaf0/logo/light.svg?fit=max&auto=format&n=DcI2Ybid7ZEnFaf0&q=85&s=c877c45432515ee69194cb19e9f983a2)![dark logo](https://mintcdn.com/anthropic-claude-docs/DcI2Ybid7ZEnFaf0/logo/dark.svg?fit=max&auto=format&n=DcI2Ybid7ZEnFaf0&q=85&s=f5bb877be0cb3cba86cf6d7c88185216)](https://docs.claude.com/)\n\n![US](https://d3gk2c5xim1je2.cloudfront.net/flags/US.svg)\n\nEnglish\n\nSearch...\n\nCtrl K\n\n- [Console](https://console.anthropic.com/login)\n- [Support](https://support.claude.com/)\n- [Discord](https://www.anthropic.com/discord)\n- [Sign up](https://console.anthropic.com/login)\n- [Sign up](https://console.anthropic.com/login)\n\nSearch...\n\nNavigation\n\nBuild with Claude Code\n\nHeadless mode\n\n[Welcome](https://docs.claude.com/en/home) [Claude Developer Platform](https://docs.claude.com/en/docs/intro) [Claude Code](https://docs.claude.com/en/docs/claude-code/overview) [Model Context Protocol (MCP)](https://docs.claude.com/en/docs/mcp) [API Reference](https://docs.claude.com/en/api/messages) [Resources](https://docs.claude.com/en/resources/overview) [Release Notes](https://docs.claude.com/en/release-notes/overview)\n\n##### Getting started\n\n- [Overview](https://docs.claude.com/en/docs/claude-code/overview)\n- [Quickstart](https://docs.claude.com/en/docs/claude-code/quickstart)\n- [Common workflows](https://docs.claude.com/en/docs/claude-code/common-workflows)\n- [Claude Code on the web](https://docs.claude.com/en/docs/claude-code/claude-code-on-the-web)\n\n##### Build with Claude Code\n\n- [Subagents](https://docs.claude.com/en/docs/claude-code/sub-agents)\n- [Plugins](https://docs.claude.com/en/docs/claude-code/plugins)\n- [Agent Skills](https://docs.claude.com/en/docs/claude-code/skills)\n- [Output styles](https://docs.claude.com/en/docs/claude-code/output-styles)\n- [Hooks](https://docs.claude.com/en/docs/claude-code/hooks-guide)\n- [Headless mode](https://docs.claude.com/en/docs/claude-code/headless)\n- [GitHub Actions](https://docs.claude.com/en/docs/claude-code/github-actions)\n- [GitLab CI/CD](https://docs.claude.com/en/docs/claude-code/gitlab-ci-cd)\n- [Model Context Protocol (MCP)](https://docs.claude.com/en/docs/claude-code/mcp)\n- [Troubleshooting](https://docs.claude.com/en/docs/claude-code/troubleshooting)\n\n##### Claude Agent SDK\n\n- [Migrate to Claude Agent SDK](https://docs.claude.com/en/docs/claude-code/sdk/migration-guide)\n\n##### Deployment\n\n- [Overview](https://docs.claude.com/en/docs/claude-code/third-party-integrations)\n- [Amazon Bedrock](https://docs.claude.com/en/docs/claude-code/amazon-bedrock)\n- [Google Vertex AI](https://docs.claude.com/en/docs/claude-code/google-vertex-ai)\n- [Network configuration](https://docs.claude.com/en/docs/claude-code/network-config)\n- [LLM gateway](https://docs.claude.com/en/docs/claude-code/llm-gateway)\n- [Development containers](https://docs.claude.com/en/docs/claude-code/devcontainer)\n- [Sandboxing](https://docs.claude.com/en/docs/claude-code/sandboxing)\n\n##### Administration\n\n- [Advanced installation](https://docs.claude.com/en/docs/claude-code/setup)\n- [Identity and Access Management](https://docs.claude.com/en/docs/claude-code/iam)\n- [Security](https://docs.claude.com/en/docs/claude-code/security)\n- [Data usage](https://docs.claude.com/en/docs/claude-code/data-usage)\n- [Monitoring](https://docs.claude.com/en/docs/claude-code/monitoring-usage)\n- [Costs](https://docs.claude.com/en/docs/claude-code/costs)\n- [Analytics](https://docs.claude.com/en/docs/claude-code/analytics)\n- [Plugin marketplaces](https://docs.claude.com/en/docs/claude-code/plugin-marketplaces)\n\n##### Configuration\n\n- [Settings](https://docs.claude.com/en/docs/claude-code/settings)\n- [Visual Studio Code](https://docs.claude.com/en/docs/claude-code/vs-code)\n- [JetBrains IDEs](https://docs.claude.com/en/docs/claude-code/jetbrains)\n- [Terminal configuration](https://docs.claude.com/en/docs/claude-code/terminal-config)\n- [Model configuration](https://docs.claude.com/en/docs/claude-code/model-config)\n- [Memory management](https://docs.claude.com/en/docs/claude-code/memory)\n- [Status line configuration](https://docs.claude.com/en/docs/claude-code/statusline)\n\n##### Reference\n\n- [CLI reference](https://docs.claude.com/en/docs/claude-code/cli-reference)\n- [Interactive mode](https://docs.claude.com/en/docs/claude-code/interactive-mode)\n- [Slash commands](https://docs.claude.com/en/docs/claude-code/slash-commands)\n- [Checkpointing](https://docs.claude.com/en/docs/claude-code/checkpointing)\n- [Hooks reference](https://docs.claude.com/en/docs/claude-code/hooks)\n- [Plugins reference](https://docs.claude.com/en/docs/claude-code/plugins-reference)\n\n##### Resources\n\n- [Legal and compliance](https://docs.claude.com/en/docs/claude-code/legal-and-compliance)\n\nOn this page\n\n- [Overview](https://docs.claude.com/en/docs/claude-code/headless#overview)\n- [Basic usage](https://docs.claude.com/en/docs/claude-code/headless#basic-usage)\n- [Configuration Options](https://docs.claude.com/en/docs/claude-code/headless#configuration-options)\n- [Multi-turn conversations](https://docs.claude.com/en/docs/claude-code/headless#multi-turn-conversations)\n- [Output Formats](https://docs.claude.com/en/docs/claude-code/headless#output-formats)\n- [Text Output (Default)](https://docs.claude.com/en/docs/claude-code/headless#text-output-default)\n- [JSON Output](https://docs.claude.com/en/docs/claude-code/headless#json-output)\n- [Streaming JSON Output](https://docs.claude.com/en/docs/claude-code/headless#streaming-json-output)\n- [Input Formats](https://docs.claude.com/en/docs/claude-code/headless#input-formats)\n- [Text Input (Default)](https://docs.claude.com/en/docs/claude-code/headless#text-input-default)\n- [Streaming JSON Input](https://docs.claude.com/en/docs/claude-code/headless#streaming-json-input)\n- [Agent Integration Examples](https://docs.claude.com/en/docs/claude-code/headless#agent-integration-examples)\n- [SRE Incident Response Bot](https://docs.claude.com/en/docs/claude-code/headless#sre-incident-response-bot)\n- [Automated Security Review](https://docs.claude.com/en/docs/claude-code/headless#automated-security-review)\n- [Multi-turn Legal Assistant](https://docs.claude.com/en/docs/claude-code/headless#multi-turn-legal-assistant)\n- [Best Practices](https://docs.claude.com/en/docs/claude-code/headless#best-practices)\n- [Related Resources](https://docs.claude.com/en/docs/claude-code/headless#related-resources)\n\nBuild with Claude Code\n\n# Headless mode\n\nCopy page\n\nRun Claude Code programmatically without interactive UI\n\nCopy page\n\n## [​](https://docs.claude.com/en/docs/claude-code/headless\\#overview)  Overview\n\nThe headless mode allows you to run Claude Code programmatically from command line scripts and automation tools without any interactive UI.\n\n## [​](https://docs.claude.com/en/docs/claude-code/headless\\#basic-usage)  Basic usage\n\nThe primary command-line interface to Claude Code is the `claude` command. Use the `--print` (or `-p`) flag to run in non-interactive mode and print the final result:\n\nCopy\n\n```\nclaude -p \"Stage my changes and write a set of commits for them\" \\\n  --allowedTools \"Bash,Read\" \\\n  --permission-mode acceptEdits\n\n```\n\n## [​](https://docs.claude.com/en/docs/claude-code/headless\\#configuration-options)  Configuration Options\n\nHeadless mode leverages all the CLI options available in Claude Code. Here are the key ones for automation and scripting:\n\n| Flag | Description | Example |\n| --- | --- | --- |\n| `--print`, `-p` | Run in non-interactive mode | `claude -p \"query\"` |\n| `--output-format` | Specify output format ( `text`, `json`, `stream-json`) | `claude -p --output-format json` |\n| `--resume`, `-r` | Resume a conversation by session ID | `claude --resume abc123` |\n| `--continue`, `-c` | Continue the most recent conversation | `claude --continue` |\n| `--verbose` | Enable verbose logging | `claude --verbose` |\n| `--append-system-prompt` | Append to system prompt (only with `--print`) | `claude --append-system-prompt \"Custom instruction\"` |\n| `--allowedTools` | Space-separated list of allowed tools, or <br> string of comma-separated list of allowed tools | `claude --allowedTools mcp__slack mcp__filesystem`<br>`claude --allowedTools \"Bash(npm install),mcp__filesystem\"` |\n| `--disallowedTools` | Space-separated list of denied tools, or <br> string of comma-separated list of denied tools | `claude --disallowedTools mcp__splunk mcp__github`<br>`claude --disallowedTools \"Bash(git commit),mcp__github\"` |\n| `--mcp-config` | Load MCP servers from a JSON file | `claude --mcp-config servers.json` |\n| `--permission-prompt-tool` | MCP tool for handling permission prompts (only with `--print`) | `claude --permission-prompt-tool mcp__auth__prompt` |\n\nFor a complete list of CLI options and features, see the [CLI reference](https://docs.claude.com/en/docs/claude-code/cli-reference) documentation.\n\n## [​](https://docs.claude.com/en/docs/claude-code/headless\\#multi-turn-conversations)  Multi-turn conversations\n\nFor multi-turn conversations, you can resume conversations or continue from the most recent session:\n\nCopy\n\n```\n# Continue the most recent conversation\nclaude --continue \"Now refactor this for better performance\"\n\n# Resume a specific conversation by session ID\nclaude --resume 550e8400-e29b-41d4-a716-446655440000 \"Update the tests\"\n\n# Resume in non-interactive mode\nclaude --resume 550e8400-e29b-41d4-a716-446655440000 \"Fix all linting issues\" --no-interactive\n\n```\n\n## [​](https://docs.claude.com/en/docs/claude-code/headless\\#output-formats)  Output Formats\n\n### [​](https://docs.claude.com/en/docs/claude-code/headless\\#text-output-default)  Text Output (Default)\n\nCopy\n\n```\nclaude -p \"Explain file src/components/Header.tsx\"\n# Output: This is a React component showing...\n\n```\n\n### [​](https://docs.claude.com/en/docs/claude-code/headless\\#json-output)  JSON Output\n\nReturns structured data including metadata:\n\nCopy\n\n```\nclaude -p \"How does the data layer work?\" --output-format json\n\n```\n\nResponse format:\n\nCopy\n\n```\n{\n  \"type\": \"result\",\n  \"subtype\": \"success\",\n  \"total_cost_usd\": 0.003,\n  \"is_error\": false,\n  \"duration_ms\": 1234,\n  \"duration_api_ms\": 800,\n  \"num_turns\": 6,\n  \"result\": \"The response text here...\",\n  \"session_id\": \"abc123\"\n}\n\n```\n\n### [​](https://docs.claude.com/en/docs/claude-code/headless\\#streaming-json-output)  Streaming JSON Output\n\nStreams each message as it is received:\n\nCopy\n\n```\nclaude -p \"Build an application\" --output-format stream-json\n\n```\n\nEach conversation begins with an initial `init` system message, followed by a list of user and assistant messages, followed by a final `result` system message with stats. Each message is emitted as a separate JSON object.\n\n## [​](https://docs.claude.com/en/docs/claude-code/headless\\#input-formats)  Input Formats\n\n### [​](https://docs.claude.com/en/docs/claude-code/headless\\#text-input-default)  Text Input (Default)\n\nCopy\n\n```\n# Direct argument\nclaude -p \"Explain this code\"\n\n# From stdin\necho \"Explain this code\" | claude -p\n\n```\n\n### [​](https://docs.claude.com/en/docs/claude-code/headless\\#streaming-json-input)  Streaming JSON Input\n\nA stream of messages provided via `stdin` where each message represents a user turn. This allows multiple turns of a conversation without re-launching the `claude` binary and allows providing guidance to the model while it is processing a request.Each message is a JSON ‘User message’ object, following the same format as the output message schema. Messages are formatted using the [jsonl](https://jsonlines.org/) format where each line of input is a complete JSON object. Streaming JSON input requires `-p` and `--output-format stream-json`.\n\nCopy\n\n```\necho '{\"type\":\"user\",\"message\":{\"role\":\"user\",\"content\":[{\"type\":\"text\",\"text\":\"Explain this code\"}]}}' | claude -p --output-format=stream-json --input-format=stream-json --verbose\n\n```\n\n## [​](https://docs.claude.com/en/docs/claude-code/headless\\#agent-integration-examples)  Agent Integration Examples\n\n### [​](https://docs.claude.com/en/docs/claude-code/headless\\#sre-incident-response-bot)  SRE Incident Response Bot\n\nCopy\n\n```\n#!/bin/bash\n\n# Automated incident response agent\ninvestigate_incident() {\n    local incident_description=\"$1\"\n    local severity=\"${2:-medium}\"\n\n    claude -p \"Incident: $incident_description (Severity: $severity)\" \\\n      --append-system-prompt \"You are an SRE expert. Diagnose the issue, assess impact, and provide immediate action items.\" \\\n      --output-format json \\\n      --allowedTools \"Bash,Read,WebSearch,mcp__datadog\" \\\n      --mcp-config monitoring-tools.json\n}\n\n# Usage\ninvestigate_incident \"Payment API returning 500 errors\" \"high\"\n\n```\n\n### [​](https://docs.claude.com/en/docs/claude-code/headless\\#automated-security-review)  Automated Security Review\n\nCopy\n\n```\n# Security audit agent for pull requests\naudit_pr() {\n    local pr_number=\"$1\"\n\n    gh pr diff \"$pr_number\" | claude -p \\\n      --append-system-prompt \"You are a security engineer. Review this PR for vulnerabilities, insecure patterns, and compliance issues.\" \\\n      --output-format json \\\n      --allowedTools \"Read,Grep,WebSearch\"\n}\n\n# Usage and save to file\naudit_pr 123 > security-report.json\n\n```\n\n### [​](https://docs.claude.com/en/docs/claude-code/headless\\#multi-turn-legal-assistant)  Multi-turn Legal Assistant\n\nCopy\n\n```\n# Legal document review with session persistence\nsession_id=$(claude -p \"Start legal review session\" --output-format json | jq -r '.session_id')\n\n# Review contract in multiple steps\nclaude -p --resume \"$session_id\" \"Review contract.pdf for liability clauses\"\nclaude -p --resume \"$session_id\" \"Check compliance with GDPR requirements\"\nclaude -p --resume \"$session_id\" \"Generate executive summary of risks\"\n\n```\n\n## [​](https://docs.claude.com/en/docs/claude-code/headless\\#best-practices)  Best Practices\n\n- **Use JSON output format** for programmatic parsing of responses:\n\n\n\n\n\n\nCopy\n\n\n\n\n\n\n\n\n\n\n\n```\n# Parse JSON response with jq\nresult=$(claude -p \"Generate code\" --output-format json)\ncode=$(echo \"$result\" | jq -r '.result')\ncost=$(echo \"$result\" | jq -r '.cost_usd')\n\n```\n\n- **Handle errors gracefully** \\- check exit codes and stderr:\n\n\n\n\n\n\nCopy\n\n\n\n\n\n\n\n\n\n\n\n```\nif ! claude -p \"$prompt\" 2>error.log; then\n      echo \"Error occurred:\" >&2\n      cat error.log >&2\n      exit 1\nfi\n\n```\n\n- **Use session management** for maintaining context in multi-turn conversations\n- **Consider timeouts** for long-running operations:\n\n\n\n\n\n\nCopy\n\n\n\n\n\n\n\n\n\n\n\n```\ntimeout 300 claude -p \"$complex_prompt\" || echo \"Timed out after 5 minutes\"\n\n```\n\n- **Respect rate limits** when making multiple requests by adding delays between calls\n\n## [​](https://docs.claude.com/en/docs/claude-code/headless\\#related-resources)  Related Resources\n\n- [CLI usage and controls](https://docs.claude.com/en/docs/claude-code/cli-reference) \\- Complete CLI documentation\n- [Common workflows](https://docs.claude.com/en/docs/claude-code/common-workflows) \\- Step-by-step guides for common use cases\n\nWas this page helpful?\n\nYesNo\n\n[Hooks](https://docs.claude.com/en/docs/claude-code/hooks-guide) [GitHub Actions](https://docs.claude.com/en/docs/claude-code/github-actions)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.\n\n[Claude Docs home page![light logo](https://mintcdn.com/anthropic-claude-docs/DcI2Ybid7ZEnFaf0/logo/light.svg?fit=max&auto=format&n=DcI2Ybid7ZEnFaf0&q=85&s=c877c45432515ee69194cb19e9f983a2)![dark logo](https://mintcdn.com/anthropic-claude-docs/DcI2Ybid7ZEnFaf0/logo/dark.svg?fit=max&auto=format&n=DcI2Ybid7ZEnFaf0&q=85&s=f5bb877be0cb3cba86cf6d7c88185216)](https://docs.claude.com/)\n\n[x](https://x.com/AnthropicAI) [linkedin](https://www.linkedin.com/company/anthropicresearch)\n\nCompany\n\n[Anthropic](https://www.anthropic.com/company) [Careers](https://www.anthropic.com/careers) [Economic Futures](https://www.anthropic.com/economic-futures) [Research](https://www.anthropic.com/research) [News](https://www.anthropic.com/news) [Trust center](https://trust.anthropic.com/) [Transparency](https://www.anthropic.com/transparency)\n\nHelp and security\n\n[Availability](https://www.anthropic.com/supported-countries) [Status](https://status.anthropic.com/) [Support center](https://support.claude.com/)\n\nLearn\n\n[Courses](https://www.anthropic.com/learn) [MCP connectors](https://claude.com/partners/mcp) [Customer stories](https://www.claude.com/customers) [Engineering blog](https://www.anthropic.com/engineering) [Events](https://www.anthropic.com/events) [Powered by Claude](https://claude.com/partners/powered-by-claude) [Service partners](https://claude.com/partners/services) [Startups program](https://claude.com/programs/startups)\n\nTerms and policies\n\n[Privacy policy](https://www.anthropic.com/legal/privacy) [Disclosure policy](https://www.anthropic.com/responsible-disclosure-policy) [Usage policy](https://www.anthropic.com/legal/aup) [Commercial terms](https://www.anthropic.com/legal/commercial-terms) [Consumer terms](https://www.anthropic.com/legal/consumer-terms)\n\nAsk Docs\nAI Avatar",
  "metadata": {
    "og:image:width": "1200",
    "og:type": "website",
    "twitter:card": "summary_large_image",
    "twitter:title": "Headless mode - Claude Docs",
    "og:image:height": "630",
    "twitter:image": "https://anthropic-claude-docs.mintlify.app/_next/image?url=%2F_mintlify%2Fapi%2Fog%3Fdivision%3DBuild%2Bwith%2BClaude%2BCode%26appearance%3Dlight%26title%3DHeadless%2Bmode%26description%3DRun%2BClaude%2BCode%2Bprogrammatically%2Bwithout%2Binteractive%2BUI%26logoLight%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Flight.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Dc877c45432515ee69194cb19e9f983a2%26logoDark%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Fdark.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Df5bb877be0cb3cba86cf6d7c88185216%26primaryColor%3D%25230E0E0E%26lightColor%3D%2523D4A27F%26darkColor%3D%25230E0E0E%26backgroundLight%3D%2523FDFDF7%26backgroundDark%3D%252309090B&w=1200&q=100",
    "twitter:image:width": "1200",
    "msapplication-config": "https://mintcdn.com/anthropic-claude-docs/JaG275Sqw0maE7Ce/_generated/favicon/browserconfig.xml?n=JaG275Sqw0maE7Ce&s=31cc0bae38445be839155997a2084e7e",
    "og:title": "Headless mode - Claude Docs",
    "twitter:image:height": "630",
    "msapplication-TileColor": "#0E0E0E",
    "twitter:description": "Run Claude Code programmatically without interactive UI",
    "viewport": "width=device-width, initial-scale=1",
    "next-size-adjust": "",
    "og:image": "https://anthropic-claude-docs.mintlify.app/_next/image?url=%2F_mintlify%2Fapi%2Fog%3Fdivision%3DBuild%2Bwith%2BClaude%2BCode%26appearance%3Dlight%26title%3DHeadless%2Bmode%26description%3DRun%2BClaude%2BCode%2Bprogrammatically%2Bwithout%2Binteractive%2BUI%26logoLight%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Flight.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Dc877c45432515ee69194cb19e9f983a2%26logoDark%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Fdark.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Df5bb877be0cb3cba86cf6d7c88185216%26primaryColor%3D%25230E0E0E%26lightColor%3D%2523D4A27F%26darkColor%3D%25230E0E0E%26backgroundLight%3D%2523FDFDF7%26backgroundDark%3D%252309090B&w=1200&q=100",
    "language": "en",
    "title": "Headless mode - Claude Docs",
    "og:description": "Run Claude Code programmatically without interactive UI",
    "ogDescription": "Run Claude Code programmatically without interactive UI",
    "apple-mobile-web-app-title": "Claude Docs",
    "ogImage": "https://anthropic-claude-docs.mintlify.app/_next/image?url=%2F_mintlify%2Fapi%2Fog%3Fdivision%3DBuild%2Bwith%2BClaude%2BCode%26appearance%3Dlight%26title%3DHeadless%2Bmode%26description%3DRun%2BClaude%2BCode%2Bprogrammatically%2Bwithout%2Binteractive%2BUI%26logoLight%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Flight.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Dc877c45432515ee69194cb19e9f983a2%26logoDark%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Fdark.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Df5bb877be0cb3cba86cf6d7c88185216%26primaryColor%3D%25230E0E0E%26lightColor%3D%2523D4A27F%26darkColor%3D%25230E0E0E%26backgroundLight%3D%2523FDFDF7%26backgroundDark%3D%252309090B&w=1200&q=100",
    "generator": "Mintlify",
    "description": "Run Claude Code programmatically without interactive UI",
    "favicon": "https://mintcdn.com/anthropic-claude-docs/JaG275Sqw0maE7Ce/_generated/favicon/favicon-16x16.png?fit=max&n=JaG275Sqw0maE7Ce&s=b20efcf65eab17019f139f435bec262e",
    "ogTitle": "Headless mode - Claude Docs",
    "application-name": "Claude Docs",
    "og:site_name": "Claude Docs",
    "charset": "utf-8",
    "scrapeId": "a0456523-6917-4433-abb9-8f618f23892d",
    "sourceURL": "https://docs.claude.com/en/docs/claude-code/headless",
    "url": "https://docs.claude.com/en/docs/claude-code/headless",
    "statusCode": 200,
    "contentType": "text/html; charset=utf-8",
    "proxyUsed": "basic",
    "cacheState": "hit",
    "cachedAt": "2025-10-21T19:51:01.453Z",
    "creditsUsed": 1
  }
}