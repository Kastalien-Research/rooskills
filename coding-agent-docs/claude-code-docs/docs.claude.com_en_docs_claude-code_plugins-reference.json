{
  "markdown": "[Claude Docs home page![light logo](https://mintcdn.com/anthropic-claude-docs/DcI2Ybid7ZEnFaf0/logo/light.svg?fit=max&auto=format&n=DcI2Ybid7ZEnFaf0&q=85&s=c877c45432515ee69194cb19e9f983a2)![dark logo](https://mintcdn.com/anthropic-claude-docs/DcI2Ybid7ZEnFaf0/logo/dark.svg?fit=max&auto=format&n=DcI2Ybid7ZEnFaf0&q=85&s=f5bb877be0cb3cba86cf6d7c88185216)](https://docs.claude.com/)\n\n![US](https://d3gk2c5xim1je2.cloudfront.net/flags/US.svg)\n\nEnglish\n\nSearch...\n\nCtrl K\n\n- [Console](https://console.anthropic.com/login)\n- [Support](https://support.claude.com/)\n- [Discord](https://www.anthropic.com/discord)\n- [Sign up](https://console.anthropic.com/login)\n- [Sign up](https://console.anthropic.com/login)\n\nSearch...\n\nNavigation\n\nReference\n\nPlugins reference\n\n[Welcome](https://docs.claude.com/en/home) [Claude Developer Platform](https://docs.claude.com/en/docs/intro) [Claude Code](https://docs.claude.com/en/docs/claude-code/overview) [Model Context Protocol (MCP)](https://docs.claude.com/en/docs/mcp) [API Reference](https://docs.claude.com/en/api/messages) [Resources](https://docs.claude.com/en/resources/overview) [Release Notes](https://docs.claude.com/en/release-notes/overview)\n\n##### Getting started\n\n- [Overview](https://docs.claude.com/en/docs/claude-code/overview)\n- [Quickstart](https://docs.claude.com/en/docs/claude-code/quickstart)\n- [Common workflows](https://docs.claude.com/en/docs/claude-code/common-workflows)\n- [Claude Code on the web](https://docs.claude.com/en/docs/claude-code/claude-code-on-the-web)\n\n##### Build with Claude Code\n\n- [Subagents](https://docs.claude.com/en/docs/claude-code/sub-agents)\n- [Plugins](https://docs.claude.com/en/docs/claude-code/plugins)\n- [Agent Skills](https://docs.claude.com/en/docs/claude-code/skills)\n- [Output styles](https://docs.claude.com/en/docs/claude-code/output-styles)\n- [Hooks](https://docs.claude.com/en/docs/claude-code/hooks-guide)\n- [Headless mode](https://docs.claude.com/en/docs/claude-code/headless)\n- [GitHub Actions](https://docs.claude.com/en/docs/claude-code/github-actions)\n- [GitLab CI/CD](https://docs.claude.com/en/docs/claude-code/gitlab-ci-cd)\n- [Model Context Protocol (MCP)](https://docs.claude.com/en/docs/claude-code/mcp)\n- [Troubleshooting](https://docs.claude.com/en/docs/claude-code/troubleshooting)\n\n##### Claude Agent SDK\n\n- [Migrate to Claude Agent SDK](https://docs.claude.com/en/docs/claude-code/sdk/migration-guide)\n\n##### Deployment\n\n- [Overview](https://docs.claude.com/en/docs/claude-code/third-party-integrations)\n- [Amazon Bedrock](https://docs.claude.com/en/docs/claude-code/amazon-bedrock)\n- [Google Vertex AI](https://docs.claude.com/en/docs/claude-code/google-vertex-ai)\n- [Network configuration](https://docs.claude.com/en/docs/claude-code/network-config)\n- [LLM gateway](https://docs.claude.com/en/docs/claude-code/llm-gateway)\n- [Development containers](https://docs.claude.com/en/docs/claude-code/devcontainer)\n- [Sandboxing](https://docs.claude.com/en/docs/claude-code/sandboxing)\n\n##### Administration\n\n- [Advanced installation](https://docs.claude.com/en/docs/claude-code/setup)\n- [Identity and Access Management](https://docs.claude.com/en/docs/claude-code/iam)\n- [Security](https://docs.claude.com/en/docs/claude-code/security)\n- [Data usage](https://docs.claude.com/en/docs/claude-code/data-usage)\n- [Monitoring](https://docs.claude.com/en/docs/claude-code/monitoring-usage)\n- [Costs](https://docs.claude.com/en/docs/claude-code/costs)\n- [Analytics](https://docs.claude.com/en/docs/claude-code/analytics)\n- [Plugin marketplaces](https://docs.claude.com/en/docs/claude-code/plugin-marketplaces)\n\n##### Configuration\n\n- [Settings](https://docs.claude.com/en/docs/claude-code/settings)\n- [Visual Studio Code](https://docs.claude.com/en/docs/claude-code/vs-code)\n- [JetBrains IDEs](https://docs.claude.com/en/docs/claude-code/jetbrains)\n- [Terminal configuration](https://docs.claude.com/en/docs/claude-code/terminal-config)\n- [Model configuration](https://docs.claude.com/en/docs/claude-code/model-config)\n- [Memory management](https://docs.claude.com/en/docs/claude-code/memory)\n- [Status line configuration](https://docs.claude.com/en/docs/claude-code/statusline)\n\n##### Reference\n\n- [CLI reference](https://docs.claude.com/en/docs/claude-code/cli-reference)\n- [Interactive mode](https://docs.claude.com/en/docs/claude-code/interactive-mode)\n- [Slash commands](https://docs.claude.com/en/docs/claude-code/slash-commands)\n- [Checkpointing](https://docs.claude.com/en/docs/claude-code/checkpointing)\n- [Hooks reference](https://docs.claude.com/en/docs/claude-code/hooks)\n- [Plugins reference](https://docs.claude.com/en/docs/claude-code/plugins-reference)\n\n##### Resources\n\n- [Legal and compliance](https://docs.claude.com/en/docs/claude-code/legal-and-compliance)\n\nOn this page\n\n- [Plugin components reference](https://docs.claude.com/en/docs/claude-code/plugins-reference#plugin-components-reference)\n- [Commands](https://docs.claude.com/en/docs/claude-code/plugins-reference#commands)\n- [Agents](https://docs.claude.com/en/docs/claude-code/plugins-reference#agents)\n- [Skills](https://docs.claude.com/en/docs/claude-code/plugins-reference#skills)\n- [Hooks](https://docs.claude.com/en/docs/claude-code/plugins-reference#hooks)\n- [MCP servers](https://docs.claude.com/en/docs/claude-code/plugins-reference#mcp-servers)\n- [Plugin manifest schema](https://docs.claude.com/en/docs/claude-code/plugins-reference#plugin-manifest-schema)\n- [Complete schema](https://docs.claude.com/en/docs/claude-code/plugins-reference#complete-schema)\n- [Required fields](https://docs.claude.com/en/docs/claude-code/plugins-reference#required-fields)\n- [Metadata fields](https://docs.claude.com/en/docs/claude-code/plugins-reference#metadata-fields)\n- [Component path fields](https://docs.claude.com/en/docs/claude-code/plugins-reference#component-path-fields)\n- [Path behavior rules](https://docs.claude.com/en/docs/claude-code/plugins-reference#path-behavior-rules)\n- [Environment variables](https://docs.claude.com/en/docs/claude-code/plugins-reference#environment-variables)\n- [Plugin directory structure](https://docs.claude.com/en/docs/claude-code/plugins-reference#plugin-directory-structure)\n- [Standard plugin layout](https://docs.claude.com/en/docs/claude-code/plugins-reference#standard-plugin-layout)\n- [File locations reference](https://docs.claude.com/en/docs/claude-code/plugins-reference#file-locations-reference)\n- [Debugging and development tools](https://docs.claude.com/en/docs/claude-code/plugins-reference#debugging-and-development-tools)\n- [Debugging commands](https://docs.claude.com/en/docs/claude-code/plugins-reference#debugging-commands)\n- [Common issues](https://docs.claude.com/en/docs/claude-code/plugins-reference#common-issues)\n- [Distribution and versioning reference](https://docs.claude.com/en/docs/claude-code/plugins-reference#distribution-and-versioning-reference)\n- [Version management](https://docs.claude.com/en/docs/claude-code/plugins-reference#version-management)\n\nReference\n\n# Plugins reference\n\nCopy page\n\nComplete technical reference for Claude Code plugin system, including schemas, CLI commands, and component specifications.\n\nCopy page\n\nFor hands-on tutorials and practical usage, see [Plugins](https://docs.claude.com/en/docs/claude-code/plugins). For plugin management across teams and communities, see [Plugin marketplaces](https://docs.claude.com/en/docs/claude-code/plugin-marketplaces).\n\nThis reference provides complete technical specifications for the Claude Code plugin system, including component schemas, CLI commands, and development tools.\n\n## [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#plugin-components-reference)  Plugin components reference\n\nThis section documents the five types of components that plugins can provide.\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#commands)  Commands\n\nPlugins add custom slash commands that integrate seamlessly with Claude Code’s command system.**Location**: `commands/` directory in plugin root**File format**: Markdown files with frontmatterFor complete details on plugin command structure, invocation patterns, and features, see [Plugin commands](https://docs.claude.com/en/docs/claude-code/slash-commands#plugin-commands).\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#agents)  Agents\n\nPlugins can provide specialized subagents for specific tasks that Claude can invoke automatically when appropriate.**Location**: `agents/` directory in plugin root**File format**: Markdown files describing agent capabilities**Agent structure**:\n\nCopy\n\n```\n---\ndescription: What this agent specializes in\ncapabilities: [\"task1\", \"task2\", \"task3\"]\n---\n\n# Agent Name\n\nDetailed description of the agent's role, expertise, and when Claude should invoke it.\n\n## Capabilities\n- Specific task the agent excels at\n- Another specialized capability\n- When to use this agent vs others\n\n## Context and examples\nProvide examples of when this agent should be used and what kinds of problems it solves.\n\n```\n\n**Integration points**:\n\n- Agents appear in the `/agents` interface\n- Claude can invoke agents automatically based on task context\n- Agents can be invoked manually by users\n- Plugin agents work alongside built-in Claude agents\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#skills)  Skills\n\nPlugins can provide Agent Skills that extend Claude’s capabilities. Skills are model-invoked—Claude autonomously decides when to use them based on the task context.**Location**: `skills/` directory in plugin root**File format**: Directories containing `SKILL.md` files with frontmatter**Skill structure**:\n\nCopy\n\n```\nskills/\n├── pdf-processor/\n│   ├── SKILL.md\n│   ├── reference.md (optional)\n│   └── scripts/ (optional)\n└── code-reviewer/\n    └── SKILL.md\n\n```\n\n**Integration behavior**:\n\n- Plugin Skills are automatically discovered when the plugin is installed\n- Claude autonomously invokes Skills based on matching task context\n- Skills can include supporting files alongside SKILL.md\n\nFor SKILL.md format and complete Skill authoring guidance, see:\n\n- [Use Skills in Claude Code](https://docs.claude.com/en/docs/claude-code/skills)\n- [Agent Skills overview](https://docs.claude.com/en/docs/agents-and-tools/agent-skills/overview#skill-structure)\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#hooks)  Hooks\n\nPlugins can provide event handlers that respond to Claude Code events automatically.**Location**: `hooks/hooks.json` in plugin root, or inline in plugin.json**Format**: JSON configuration with event matchers and actions**Hook configuration**:\n\nCopy\n\n```\n{\n  \"hooks\": {\n    \"PostToolUse\": [\\\n      {\\\n        \"matcher\": \"Write|Edit\",\\\n        \"hooks\": [\\\n          {\\\n            \"type\": \"command\",\\\n            \"command\": \"${CLAUDE_PLUGIN_ROOT}/scripts/format-code.sh\"\\\n          }\\\n        ]\\\n      }\\\n    ]\n  }\n}\n\n```\n\n**Available events**:\n\n- `PreToolUse`: Before Claude uses any tool\n- `PostToolUse`: After Claude uses any tool\n- `UserPromptSubmit`: When user submits a prompt\n- `Notification`: When Claude Code sends notifications\n- `Stop`: When Claude attempts to stop\n- `SubagentStop`: When a subagent attempts to stop\n- `SessionStart`: At the beginning of sessions\n- `SessionEnd`: At the end of sessions\n- `PreCompact`: Before conversation history is compacted\n\n**Hook types**:\n\n- `command`: Execute shell commands or scripts\n- `validation`: Validate file contents or project state\n- `notification`: Send alerts or status updates\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#mcp-servers)  MCP servers\n\nPlugins can bundle Model Context Protocol (MCP) servers to connect Claude Code with external tools and services.**Location**: `.mcp.json` in plugin root, or inline in plugin.json**Format**: Standard MCP server configuration**MCP server configuration**:\n\nCopy\n\n```\n{\n  \"mcpServers\": {\n    \"plugin-database\": {\n      \"command\": \"${CLAUDE_PLUGIN_ROOT}/servers/db-server\",\n      \"args\": [\"--config\", \"${CLAUDE_PLUGIN_ROOT}/config.json\"],\n      \"env\": {\n        \"DB_PATH\": \"${CLAUDE_PLUGIN_ROOT}/data\"\n      }\n    },\n    \"plugin-api-client\": {\n      \"command\": \"npx\",\n      \"args\": [\"@company/mcp-server\", \"--plugin-mode\"],\n      \"cwd\": \"${CLAUDE_PLUGIN_ROOT}\"\n    }\n  }\n}\n\n```\n\n**Integration behavior**:\n\n- Plugin MCP servers start automatically when the plugin is enabled\n- Servers appear as standard MCP tools in Claude’s toolkit\n- Server capabilities integrate seamlessly with Claude’s existing tools\n- Plugin servers can be configured independently of user MCP servers\n\n* * *\n\n## [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#plugin-manifest-schema)  Plugin manifest schema\n\nThe `plugin.json` file defines your plugin’s metadata and configuration. This section documents all supported fields and options.\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#complete-schema)  Complete schema\n\nCopy\n\n```\n{\n  \"name\": \"plugin-name\",\n  \"version\": \"1.2.0\",\n  \"description\": \"Brief plugin description\",\n  \"author\": {\n    \"name\": \"Author Name\",\n    \"email\": \"author@example.com\",\n    \"url\": \"https://github.com/author\"\n  },\n  \"homepage\": \"https://docs.example.com/plugin\",\n  \"repository\": \"https://github.com/author/plugin\",\n  \"license\": \"MIT\",\n  \"keywords\": [\"keyword1\", \"keyword2\"],\n  \"commands\": [\"./custom/commands/special.md\"],\n  \"agents\": \"./custom/agents/\",\n  \"hooks\": \"./config/hooks.json\",\n  \"mcpServers\": \"./mcp-config.json\"\n}\n\n```\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#required-fields)  Required fields\n\n| Field | Type | Description | Example |\n| --- | --- | --- | --- |\n| `name` | string | Unique identifier (kebab-case, no spaces) | `\"deployment-tools\"` |\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#metadata-fields)  Metadata fields\n\n| Field | Type | Description | Example |\n| --- | --- | --- | --- |\n| `version` | string | Semantic version | `\"2.1.0\"` |\n| `description` | string | Brief explanation of plugin purpose | `\"Deployment automation tools\"` |\n| `author` | object | Author information | `{\"name\": \"Dev Team\", \"email\": \"dev@company.com\"}` |\n| `homepage` | string | Documentation URL | `\"https://docs.example.com\"` |\n| `repository` | string | Source code URL | `\"https://github.com/user/plugin\"` |\n| `license` | string | License identifier | `\"MIT\"`, `\"Apache-2.0\"` |\n| `keywords` | array | Discovery tags | `[\"deployment\", \"ci-cd\"]` |\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#component-path-fields)  Component path fields\n\n| Field | Type | Description | Example |\n| --- | --- | --- | --- |\n| `commands` | string\\|array | Additional command files/directories | `\"./custom/cmd.md\"` or `[\"./cmd1.md\"]` |\n| `agents` | string\\|array | Additional agent files | `\"./custom/agents/\"` |\n| `hooks` | string\\|object | Hook config path or inline config | `\"./hooks.json\"` |\n| `mcpServers` | string\\|object | MCP config path or inline config | `\"./mcp.json\"` |\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#path-behavior-rules)  Path behavior rules\n\n**Important**: Custom paths supplement default directories - they don’t replace them.\n\n- If `commands/` exists, it’s loaded in addition to custom command paths\n- All paths must be relative to plugin root and start with `./`\n- Commands from custom paths use the same naming and namespacing rules\n- Multiple paths can be specified as arrays for flexibility\n\n**Path examples**:\n\nCopy\n\n```\n{\n  \"commands\": [\\\n    \"./specialized/deploy.md\",\\\n    \"./utilities/batch-process.md\"\\\n  ],\n  \"agents\": [\\\n    \"./custom-agents/reviewer.md\",\\\n    \"./custom-agents/tester.md\"\\\n  ]\n}\n\n```\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#environment-variables)  Environment variables\n\n**`${CLAUDE_PLUGIN_ROOT}`**: Contains the absolute path to your plugin directory. Use this in hooks, MCP servers, and scripts to ensure correct paths regardless of installation location.\n\nCopy\n\n```\n{\n  \"hooks\": {\n    \"PostToolUse\": [\\\n      {\\\n        \"hooks\": [\\\n          {\\\n            \"type\": \"command\",\\\n            \"command\": \"${CLAUDE_PLUGIN_ROOT}/scripts/process.sh\"\\\n          }\\\n        ]\\\n      }\\\n    ]\n  }\n}\n\n```\n\n* * *\n\n## [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#plugin-directory-structure)  Plugin directory structure\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#standard-plugin-layout)  Standard plugin layout\n\nA complete plugin follows this structure:\n\nCopy\n\n```\nenterprise-plugin/\n├── .claude-plugin/           # Metadata directory\n│   └── plugin.json          # Required: plugin manifest\n├── commands/                 # Default command location\n│   ├── status.md\n│   └──  logs.md\n├── agents/                   # Default agent location\n│   ├── security-reviewer.md\n│   ├── performance-tester.md\n│   └── compliance-checker.md\n├── skills/                   # Agent Skills\n│   ├── code-reviewer/\n│   │   └── SKILL.md\n│   └── pdf-processor/\n│       ├── SKILL.md\n│       └── scripts/\n├── hooks/                    # Hook configurations\n│   ├── hooks.json           # Main hook config\n│   └── security-hooks.json  # Additional hooks\n├── .mcp.json                # MCP server definitions\n├── scripts/                 # Hook and utility scripts\n│   ├── security-scan.sh\n│   ├── format-code.py\n│   └── deploy.js\n├── LICENSE                  # License file\n└── CHANGELOG.md             # Version history\n\n```\n\nThe `.claude-plugin/` directory contains the `plugin.json` file. All other directories (commands/, agents/, skills/, hooks/) must be at the plugin root, not inside `.claude-plugin/`.\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#file-locations-reference)  File locations reference\n\n| Component | Default Location | Purpose |\n| --- | --- | --- |\n| **Manifest** | `.claude-plugin/plugin.json` | Required metadata file |\n| **Commands** | `commands/` | Slash command markdown files |\n| **Agents** | `agents/` | Subagent markdown files |\n| **Skills** | `skills/` | Agent Skills with SKILL.md files |\n| **Hooks** | `hooks/hooks.json` | Hook configuration |\n| **MCP servers** | `.mcp.json` | MCP server definitions |\n\n* * *\n\n## [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#debugging-and-development-tools)  Debugging and development tools\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#debugging-commands)  Debugging commands\n\nUse `claude --debug` to see plugin loading details:\n\nCopy\n\n```\nclaude --debug\n\n```\n\nThis shows:\n\n- Which plugins are being loaded\n- Any errors in plugin manifests\n- Command, agent, and hook registration\n- MCP server initialization\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#common-issues)  Common issues\n\n| Issue | Cause | Solution |\n| --- | --- | --- |\n| Plugin not loading | Invalid `plugin.json` | Validate JSON syntax |\n| Commands not appearing | Wrong directory structure | Ensure `commands/` at root, not in `.claude-plugin/` |\n| Hooks not firing | Script not executable | Run `chmod +x script.sh` |\n| MCP server fails | Missing `${CLAUDE_PLUGIN_ROOT}` | Use variable for all plugin paths |\n| Path errors | Absolute paths used | All paths must be relative and start with `./` |\n\n* * *\n\n## [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#distribution-and-versioning-reference)  Distribution and versioning reference\n\n### [​](https://docs.claude.com/en/docs/claude-code/plugins-reference\\#version-management)  Version management\n\nFollow semantic versioning for plugin releases:\n\nCopy\n\n```\n\n## See also\n\n- [Plugins](/en/docs/claude-code/plugins) - Tutorials and practical usage\n- [Plugin marketplaces](/en/docs/claude-code/plugin-marketplaces) - Creating and managing marketplaces\n- [Slash commands](/en/docs/claude-code/slash-commands) - Command development details\n- [Subagents](/en/docs/claude-code/sub-agents) - Agent configuration and capabilities\n- [Agent Skills](/en/docs/claude-code/skills) - Extend Claude's capabilities\n- [Hooks](/en/docs/claude-code/hooks) - Event handling and automation\n- [MCP](/en/docs/claude-code/mcp) - External tool integration\n- [Settings](/en/docs/claude-code/settings) - Configuration options for plugins\n\n```\n\nWas this page helpful?\n\nYesNo\n\n[Hooks reference](https://docs.claude.com/en/docs/claude-code/hooks) [Legal and compliance](https://docs.claude.com/en/docs/claude-code/legal-and-compliance)\n\nAssistant\n\nResponses are generated using AI and may contain mistakes.\n\n[Claude Docs home page![light logo](https://mintcdn.com/anthropic-claude-docs/DcI2Ybid7ZEnFaf0/logo/light.svg?fit=max&auto=format&n=DcI2Ybid7ZEnFaf0&q=85&s=c877c45432515ee69194cb19e9f983a2)![dark logo](https://mintcdn.com/anthropic-claude-docs/DcI2Ybid7ZEnFaf0/logo/dark.svg?fit=max&auto=format&n=DcI2Ybid7ZEnFaf0&q=85&s=f5bb877be0cb3cba86cf6d7c88185216)](https://docs.claude.com/)\n\n[x](https://x.com/AnthropicAI) [linkedin](https://www.linkedin.com/company/anthropicresearch)\n\nCompany\n\n[Anthropic](https://www.anthropic.com/company) [Careers](https://www.anthropic.com/careers) [Economic Futures](https://www.anthropic.com/economic-futures) [Research](https://www.anthropic.com/research) [News](https://www.anthropic.com/news) [Trust center](https://trust.anthropic.com/) [Transparency](https://www.anthropic.com/transparency)\n\nHelp and security\n\n[Availability](https://www.anthropic.com/supported-countries) [Status](https://status.anthropic.com/) [Support center](https://support.claude.com/)\n\nLearn\n\n[Courses](https://www.anthropic.com/learn) [MCP connectors](https://claude.com/partners/mcp) [Customer stories](https://www.claude.com/customers) [Engineering blog](https://www.anthropic.com/engineering) [Events](https://www.anthropic.com/events) [Powered by Claude](https://claude.com/partners/powered-by-claude) [Service partners](https://claude.com/partners/services) [Startups program](https://claude.com/programs/startups)\n\nTerms and policies\n\n[Privacy policy](https://www.anthropic.com/legal/privacy) [Disclosure policy](https://www.anthropic.com/responsible-disclosure-policy) [Usage policy](https://www.anthropic.com/legal/aup) [Commercial terms](https://www.anthropic.com/legal/commercial-terms) [Consumer terms](https://www.anthropic.com/legal/consumer-terms)\n\nAsk Docs\nAI Avatar",
  "metadata": {
    "ogTitle": "Plugins reference - Claude Docs",
    "og:site_name": "Claude Docs",
    "apple-mobile-web-app-title": "Claude Docs",
    "ogDescription": "Complete technical reference for Claude Code plugin system, including schemas, CLI commands, and component specifications.",
    "twitter:description": "Complete technical reference for Claude Code plugin system, including schemas, CLI commands, and component specifications.",
    "twitter:image:height": "630",
    "charset": "utf-8",
    "twitter:title": "Plugins reference - Claude Docs",
    "title": "Plugins reference - Claude Docs",
    "og:type": "website",
    "twitter:card": "summary_large_image",
    "msapplication-TileColor": "#0E0E0E",
    "msapplication-config": "https://mintcdn.com/anthropic-claude-docs/JaG275Sqw0maE7Ce/_generated/favicon/browserconfig.xml?n=JaG275Sqw0maE7Ce&s=31cc0bae38445be839155997a2084e7e",
    "og:title": "Plugins reference - Claude Docs",
    "twitter:image": "https://anthropic-claude-docs.mintlify.app/_next/image?url=%2F_mintlify%2Fapi%2Fog%3Fdivision%3DReference%26appearance%3Dlight%26title%3DPlugins%2Breference%26description%3DComplete%2Btechnical%2Breference%2Bfor%2BClaude%2BCode%2Bplugin%2Bsystem%252C%2Bincluding%2Bschemas%252C%2BCLI%2Bcommands%252C%2Band%2Bcomponent%2Bspecifications.%26logoLight%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Flight.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Dc877c45432515ee69194cb19e9f983a2%26logoDark%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Fdark.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Df5bb877be0cb3cba86cf6d7c88185216%26primaryColor%3D%25230E0E0E%26lightColor%3D%2523D4A27F%26darkColor%3D%25230E0E0E%26backgroundLight%3D%2523FDFDF7%26backgroundDark%3D%252309090B&w=1200&q=100",
    "twitter:image:width": "1200",
    "ogImage": "https://anthropic-claude-docs.mintlify.app/_next/image?url=%2F_mintlify%2Fapi%2Fog%3Fdivision%3DReference%26appearance%3Dlight%26title%3DPlugins%2Breference%26description%3DComplete%2Btechnical%2Breference%2Bfor%2BClaude%2BCode%2Bplugin%2Bsystem%252C%2Bincluding%2Bschemas%252C%2BCLI%2Bcommands%252C%2Band%2Bcomponent%2Bspecifications.%26logoLight%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Flight.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Dc877c45432515ee69194cb19e9f983a2%26logoDark%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Fdark.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Df5bb877be0cb3cba86cf6d7c88185216%26primaryColor%3D%25230E0E0E%26lightColor%3D%2523D4A27F%26darkColor%3D%25230E0E0E%26backgroundLight%3D%2523FDFDF7%26backgroundDark%3D%252309090B&w=1200&q=100",
    "og:image": "https://anthropic-claude-docs.mintlify.app/_next/image?url=%2F_mintlify%2Fapi%2Fog%3Fdivision%3DReference%26appearance%3Dlight%26title%3DPlugins%2Breference%26description%3DComplete%2Btechnical%2Breference%2Bfor%2BClaude%2BCode%2Bplugin%2Bsystem%252C%2Bincluding%2Bschemas%252C%2BCLI%2Bcommands%252C%2Band%2Bcomponent%2Bspecifications.%26logoLight%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Flight.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Dc877c45432515ee69194cb19e9f983a2%26logoDark%3Dhttps%253A%252F%252Fmintcdn.com%252Fanthropic-claude-docs%252FDcI2Ybid7ZEnFaf0%252Flogo%252Fdark.svg%253Ffit%253Dmax%2526auto%253Dformat%2526n%253DDcI2Ybid7ZEnFaf0%2526q%253D85%2526s%253Df5bb877be0cb3cba86cf6d7c88185216%26primaryColor%3D%25230E0E0E%26lightColor%3D%2523D4A27F%26darkColor%3D%25230E0E0E%26backgroundLight%3D%2523FDFDF7%26backgroundDark%3D%252309090B&w=1200&q=100",
    "generator": "Mintlify",
    "og:image:height": "630",
    "next-size-adjust": "",
    "og:description": "Complete technical reference for Claude Code plugin system, including schemas, CLI commands, and component specifications.",
    "description": "Complete technical reference for Claude Code plugin system, including schemas, CLI commands, and component specifications.",
    "favicon": "https://mintcdn.com/anthropic-claude-docs/JaG275Sqw0maE7Ce/_generated/favicon/favicon-16x16.png?fit=max&n=JaG275Sqw0maE7Ce&s=b20efcf65eab17019f139f435bec262e",
    "og:image:width": "1200",
    "viewport": "width=device-width, initial-scale=1",
    "application-name": "Claude Docs",
    "language": "en",
    "scrapeId": "7f7b176f-481e-4f23-974d-8422ad6aeb85",
    "sourceURL": "https://docs.claude.com/en/docs/claude-code/plugins-reference",
    "url": "https://docs.claude.com/en/docs/claude-code/plugins-reference",
    "statusCode": 200,
    "contentType": "text/html; charset=utf-8",
    "proxyUsed": "basic",
    "cacheState": "hit",
    "cachedAt": "2025-10-21T20:02:45.124Z",
    "creditsUsed": 1
  }
}