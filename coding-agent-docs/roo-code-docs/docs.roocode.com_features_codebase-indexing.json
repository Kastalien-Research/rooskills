{
  "markdown": "Get comprehensive, actionable reviews directly in your PRs. [Try Roo's PR Reviewer](https://roocode.com/reviewer?utm_source=docs&utm_medium=banner&utm_campaign=reviewer_promo)\n\n[Skip to main content](https://docs.roocode.com/features/codebase-indexing#__docusaurus_skipToContent_fallback)\n\n[![Roo Code Logo](https://docs.roocode.com/img/roo-code-logo-dark.png)](https://docs.roocode.com/)\n\n`ctrl`  `K`\n\n[Reddit](https://www.reddit.com/r/RooCode/ \"Reddit\")[Discord](https://discord.gg/roocode \"Discord\")\n\n[20.3k](https://github.com/RooCodeInc/Roo-Code \"GitHub Repository\") [Install ·574.1k](https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline \"Install VS Code Extension\")\n\n- [Welcome](https://docs.roocode.com/)\n- [Getting Started](https://docs.roocode.com/features/codebase-indexing#)\n\n- [Tutorial Videos](https://docs.roocode.com/features/codebase-indexing#)\n\n- [Roo Code Cloud](https://docs.roocode.com/features/codebase-indexing#)\n\n- Features\n\n  - [API Configuration Profiles](https://docs.roocode.com/features/api-configuration-profiles)\n  - [Auto-Approving Actions](https://docs.roocode.com/features/auto-approving-actions)\n  - [Boomerang Tasks](https://docs.roocode.com/features/boomerang-tasks)\n  - [Browser Use](https://docs.roocode.com/features/browser-use)\n  - [Checkpoints](https://docs.roocode.com/features/checkpoints)\n  - [Code Actions](https://docs.roocode.com/features/code-actions)\n  - [Codebase Indexing](https://docs.roocode.com/features/codebase-indexing)\n  - [Custom Instructions](https://docs.roocode.com/features/custom-instructions)\n  - [Diagnostics Integration](https://docs.roocode.com/features/diagnostics-integration)\n  - [Customizing Modes](https://docs.roocode.com/features/custom-modes)\n  - [Diff/Fast Edits](https://docs.roocode.com/features/fast-edits)\n  - [Enhance Prompt](https://docs.roocode.com/features/enhance-prompt)\n  - [Import/Export/Reset Settings](https://docs.roocode.com/features/settings-management)\n  - [Intelligent Context Condensing](https://docs.roocode.com/features/intelligent-context-condensing)\n  - [Keyboard Navigation](https://docs.roocode.com/features/keyboard-shortcuts)\n  - [Roo Code Marketplace](https://docs.roocode.com/features/marketplace)\n  - [Message Queueing](https://docs.roocode.com/features/message-queueing)\n  - [Model Temperature](https://docs.roocode.com/features/model-temperature)\n  - [Multi-File Reads](https://docs.roocode.com/features/concurrent-file-reads)\n  - [.rooignore](https://docs.roocode.com/features/rooignore)\n  - [Slash Commands](https://docs.roocode.com/features/slash-commands)\n  - [Suggested Responses](https://docs.roocode.com/features/suggested-responses)\n  - [Task Todo List](https://docs.roocode.com/features/task-todo-list)\n  - [Terminal Shell Integration](https://docs.roocode.com/features/shell-integration)\n  - [MCP](https://docs.roocode.com/features/codebase-indexing#)\n\n  - [Experimental](https://docs.roocode.com/features/codebase-indexing#)\n\n  - [Additional Features](https://docs.roocode.com/features/more-features)\n- [Advanced Usage](https://docs.roocode.com/features/codebase-indexing#)\n\n- [Model Providers](https://docs.roocode.com/features/codebase-indexing#)\n\n- [FAQ](https://docs.roocode.com/features/codebase-indexing#)\n\n- [Contributing (GitHub)](https://github.com/RooCodeInc/Roo-Code/blob/main/CONTRIBUTING.md)\n- [Roocabulary (GitHub)](https://github.com/cannuri/Roocabulary)\n- [Update Notes](https://docs.roocode.com/features/codebase-indexing#)\n\n\n- [Home page](https://docs.roocode.com/)\n- Features\n- Codebase Indexing\n\nCopy Page\n\nOn this page\n\n# Codebase Indexing\n\nCodebase Indexing transforms how Roo Code understands your project by creating a semantic search index using AI embeddings. Instead of searching for exact text matches, it understands the _meaning_ of your queries, helping Roo find relevant code even when you don't know specific function names or file locations.\n\nCodebase Indexing \\|\\| Tutorial - YouTube\n\n[Photo image of Roo Code](https://www.youtube.com/channel/UCfCnIRjGVRzwy8YqelcV13w?embeds_referring_euri=https%3A%2F%2Fdocs.roocode.com%2F)\n\nRoo Code\n\n3.81K subscribers\n\n[Codebase Indexing \\|\\| Tutorial](https://www.youtube.com/watch?v=r1bpod1VWhg)\n\nRoo Code\n\nSearch\n\nWatch later\n\nShare\n\nCopy link\n\nInfo\n\nShopping\n\nTap to unmute\n\nIf playback doesn't begin shortly, try restarting your device.\n\nMore videos\n\n## More videos\n\nYou're signed out\n\nVideos you watch may be added to the TV's watch history and influence TV recommendations. To avoid this, cancel and sign in to YouTube on your computer.\n\nCancelConfirm\n\nShare\n\nInclude playlist\n\nAn error occurred while retrieving sharing information. Please try again later.\n\n[Watch on](https://www.youtube.com/watch?v=r1bpod1VWhg&embeds_referring_euri=https%3A%2F%2Fdocs.roocode.com%2F)\n\n0:00\n\n0:00 / 1:25\n•Live\n\n•\n\n* * *\n\n## What It Does [​](https://docs.roocode.com/features/codebase-indexing\\#what-it-does \"Direct link to What It Does\")\n\nWhen enabled, the indexing system:\n\n1. **Parses your code** using Tree-sitter to identify semantic blocks (functions, classes, methods)\n2. **Creates embeddings** of each code block using AI models\n3. **Stores vectors** in a Qdrant database for fast similarity search\n4. **Provides the [`codebase_search`](https://docs.roocode.com/advanced-usage/available-tools/codebase-search) tool** to Roo for intelligent code discovery\n\nThis enables natural language queries like \"user authentication logic\" or \"database connection handling\" to find relevant code across your entire project.\n\n* * *\n\n## Quick Start Guide [​](https://docs.roocode.com/features/codebase-indexing\\#quick-start-guide \"Direct link to Quick Start Guide\")\n\n💰 Completely Free Setup Available\n\nYou can set up codebase indexing at **zero cost** by using:\n\n- **Qdrant Cloud** (free tier) or **Docker Qdrant** (completely free)\n- **Google Gemini** (currently free)\n\nThis gives you professional-grade semantic search without any subscription fees!\n\n### Step 1: Choose Your Setup [​](https://docs.roocode.com/features/codebase-indexing\\#step-1-choose-your-setup \"Direct link to Step 1: Choose Your Setup\")\n\nBefore enabling codebase indexing, you'll need two components:\n\n1. **An Embedding Provider** \\- to convert code into searchable vectors\n2. **A Vector Database** \\- to store and search those vectors\n\n### Step 2: Set Up Qdrant (Vector Database) [​](https://docs.roocode.com/features/codebase-indexing\\#step-2-set-up-qdrant-vector-database \"Direct link to Step 2: Set Up Qdrant (Vector Database)\")\n\n#### Option A: Cloud Setup (Recommended for Getting Started) - **FREE** [​](https://docs.roocode.com/features/codebase-indexing\\#option-a-cloud-setup-recommended-for-getting-started---free \"Direct link to option-a-cloud-setup-recommended-for-getting-started---free\")\n\n1. Sign up at [Qdrant Cloud](https://cloud.qdrant.io/) (free tier available)\n2. Create a cluster\n3. Copy your URL and API key\n\n#### Option B: Local Setup - **FREE** [​](https://docs.roocode.com/features/codebase-indexing\\#option-b-local-setup---free \"Direct link to option-b-local-setup---free\")\n\nUsing Docker:\n\n```codeBlockLines_e6Vv\ndocker run -d \\\n  --name qdrant \\\n  --restart unless-stopped \\\n  -p 6333:6333 \\\n  -v qdrant_data:/qdrant/storage \\\n  qdrant/qdrant\n\n```\n\nUsing Docker Compose:\n\n```codeBlockLines_e6Vv\nservices:\n  qdrant:\n    image: qdrant/qdrant\n    ports:\n      - \"6333:6333\"\n    volumes:\n      - qdrant_storage:/qdrant/storage\nvolumes:\n  qdrant_storage:\n\n```\n\n### Step 3: Set Up an Embedding Provider [​](https://docs.roocode.com/features/codebase-indexing\\#step-3-set-up-an-embedding-provider \"Direct link to Step 3: Set Up an Embedding Provider\")\n\n#### Google Gemini Setup (Recommended) - **FREE** [​](https://docs.roocode.com/features/codebase-indexing\\#google-gemini-setup-recommended---free \"Direct link to google-gemini-setup-recommended---free\")\n\n1. Get an API key from [Google AI Studio](https://aistudio.google.com/apikey) (currently free)\n2. In Roo Code settings:\n   - Provider: **Google Gemini**\n   - API Key: Your Google AI Studio key\n\nOther Providers Available\n\nWhile this guide focuses on Google Gemini since it's currently free, Roo Code also supports OpenAI, Ollama, and OpenAI-compatible providers. You can explore these options in the configuration dropdown.\n\n### Step 4: Save [​](https://docs.roocode.com/features/codebase-indexing\\#step-4-save \"Direct link to Step 4: Save\")\n\n1. Click **Save** and **Start Indexing**\n\nThe status indicator will show:\n\n- **Yellow (Indexing)**: Currently processing files\n- **Green (Indexed)**: Ready for searches\n- **Red (Error)**: Check troubleshooting section\n\n* * *\n\n## Managing and Configuring the Indexer [​](https://docs.roocode.com/features/codebase-indexing\\#managing-and-configuring-the-indexer \"Direct link to Managing and Configuring the Indexer\")\n\nYou can monitor the status and manage all configuration for the codebase indexer directly from the Roo Code chat interface.\n\n### The Status Icon [​](https://docs.roocode.com/features/codebase-indexing\\#the-status-icon \"Direct link to The Status Icon\")\n\nAt the bottom-right corner of the chat input, you'll find the **Codebase Indexing status icon**. This icon provides a quick, at-a-glance overview of the indexer's current state.\n\n![Codebase Indexing Status Icon](https://docs.roocode.com/img/codebase-indexing/codebase-indexing-1.png)\n\nThe color of the icon indicates the state:\n\n- 🟢 **Green**: **Indexed**. The index is up-to-date and ready for search.\n- 🟡 **Yellow**: **Indexing**. The system is actively processing files. Searches can still be performed, but results may be incomplete.\n- 🔴 **Red**: **Error**. An issue has occurred (e.g., failed to connect to Qdrant or the embedding provider). See the Troubleshooting section for help.\n- ⚪ **Gray**: **Standby**. The indexer is waiting for configuration or has been disabled.\n\n**Multi-Folder Workspaces**: In multi-folder workspaces, each folder maintains its own indexing status and configuration. The status icon reflects the combined state of all workspace folders.\n\n### The Configuration Popover [​](https://docs.roocode.com/features/codebase-indexing\\#the-configuration-popover \"Direct link to The Configuration Popover\")\n\nClicking the status icon opens the main configuration popover. Here, you can view the detailed status and manage all settings.\n\n![Codebase Indexing Popover](https://docs.roocode.com/img/codebase-indexing/codebase-indexing-2.png)\n\n- **Status**: A detailed message showing the current state, such as \"Indexed - File watcher started\" or the progress of an ongoing scan.\n- **Setup**: Contains the primary fields for connecting to your embedding provider and vector database.\n- **Advanced Configuration**: Allows you to fine-tune search parameters like the similarity threshold.\n- **Clear Index Data**: Deletes all data from the Qdrant collection and clears the local file cache. Use this when you want to re-index your entire project from scratch. **This action cannot be undone.**\n- **Save**: Applies your configuration changes. If a critical setting (like an API key or a model) is changed, the indexer will automatically restart.\n\n### Detailed Configuration Fields [​](https://docs.roocode.com/features/codebase-indexing\\#detailed-configuration-fields \"Direct link to Detailed Configuration Fields\")\n\nThis guide explains each setting available in the configuration popover.\n\n![Codebase Indexing Configuration Details](https://docs.roocode.com/img/codebase-indexing/codebase-indexing-3.png)\n\n#### **Setup Fields** [​](https://docs.roocode.com/features/codebase-indexing\\#setup-fields \"Direct link to setup-fields\")\n\n- **Embedder Provider**\n  - **Purpose**: To select your source for generating AI embeddings.\n  - **Behavior**: This dropdown menu determines which configuration fields are shown. Your options are **OpenAI**, **Google Gemini**, **Ollama**, and **OpenAI Compatible**.\n- **API Key** (for OpenAI, Gemini, OpenAI Compatible)\n  - **Purpose**: The secret key to authenticate with your chosen provider.\n  - **Behavior**: This input is required for all cloud-based providers and is stored securely in your VS Code secret storage.\n- **Base URL** (for Ollama, OpenAI Compatible)\n  - **Purpose**: The endpoint for connecting to the provider's API.\n  - **Behavior**: For **Ollama**, this is typically `http://localhost:11434`. For **OpenAI Compatible** providers like Azure, this is the full deployment URL.\n- **Model**\n  - **Purpose**: To select the specific embedding model you want to use.\n  - **Behavior**: The list of available models changes based on the selected provider. The model's vector dimension (e.g., `1536 dimensions`) is displayed, as changing dimensions requires a full re-index.\n- **Qdrant URL**\n  - **Purpose**: The connection endpoint for your Qdrant vector database.\n  - **Behavior**: This must be a valid URL pointing to your local or cloud-based Qdrant instance (e.g., `http://localhost:6333`).\n- **Qdrant API Key**\n  - **Purpose**: The authentication key for a secured Qdrant instance.\n  - **Behavior**: This field is optional and should only be used if your Qdrant deployment requires an API key.\n\n#### **Advanced Configuration Fields** [​](https://docs.roocode.com/features/codebase-indexing\\#advanced-configuration-fields \"Direct link to advanced-configuration-fields\")\n\n- **Search Score Threshold**\n  - **Purpose**: Controls the minimum similarity score required for a code snippet to be considered a match.\n  - **Behavior**: Use the slider to set a value between 0.0 and 1.0. A lower value returns more (but potentially less relevant) results, while a higher value returns fewer, more precise results.\n  - **Recommended Settings**:\n    - **Low (0.15-0.3)**: Broader results, good for exploration\n    - **Medium (0.4-0.5)**: Balanced precision and recall (default: 0.4)\n    - **High (0.6-0.8)**: Precise matches only\n- **Maximum Search Results**\n  - **Purpose**: Sets the maximum number of code snippets returned by a single `codebase_search`.\n  - **Behavior**: Use the slider to adjust the limit. This helps control the amount of context provided to the AI.\n\n* * *\n\n## Key Benefits [​](https://docs.roocode.com/features/codebase-indexing\\#key-benefits \"Direct link to Key Benefits\")\n\n- **Semantic Search**: Find code by meaning, not just keywords\n- **Enhanced AI Understanding**: Roo can better comprehend and work with your codebase\n- **Cross-Project Discovery**: Search across all files, not just what's open\n- **Pattern Recognition**: Locate similar implementations and code patterns\n\n* * *\n\n## How Files Are Processed [​](https://docs.roocode.com/features/codebase-indexing\\#how-files-are-processed \"Direct link to How Files Are Processed\")\n\n### Smart Code Parsing [​](https://docs.roocode.com/features/codebase-indexing\\#smart-code-parsing \"Direct link to Smart Code Parsing\")\n\nThe system uses a sophisticated parsing strategy:\n\n1. **Tree-sitter First**: For supported languages, it uses AST parsing to identify semantic code blocks (functions, classes, methods)\n2. **Markdown Support**: Indexes Markdown files by treating headers as semantic entry points\n3. **Intelligent Fallback**: For unsupported file types, it falls back to line-based chunking\n\n**Block Sizing**:\n\n- Minimum: 100 characters\n- Maximum: 1,000 characters\n- Large functions are split intelligently at logical boundaries\n\n### File Filtering [​](https://docs.roocode.com/features/codebase-indexing\\#file-filtering \"Direct link to File Filtering\")\n\nThe indexer respects your project's ignore patterns:\n\n- Files matching `.gitignore` patterns\n- Files matching `.rooignore` patterns\n- Binary files and images\n- Files larger than 1MB\n\n**Important**: Ensure your `.gitignore` includes common dependency folders like `node_modules`, `vendor`, `target`, etc., as the system relies exclusively on these patterns for filtering.\n\n### Incremental Updates [​](https://docs.roocode.com/features/codebase-indexing\\#incremental-updates \"Direct link to Incremental Updates\")\n\n- **File Watching**: Monitors your workspace for changes in real-time\n- **Smart Updates**: Only reprocesses modified files\n- **Branch Aware**: Automatically handles Git branch switches\n- **Hash-based Caching**: Avoids reprocessing unchanged content\n- **Multi-Folder Workspaces**: Each folder in a multi-folder workspace maintains its own index with separate settings and status\n\n* * *\n\n## Best Practices [​](https://docs.roocode.com/features/codebase-indexing\\#best-practices \"Direct link to Best Practices\")\n\n### Writing Effective Queries [​](https://docs.roocode.com/features/codebase-indexing\\#writing-effective-queries \"Direct link to Writing Effective Queries\")\n\nInstead of searching for exact syntax:\n\n- ❌ `const getUser`\n- ✅ `function to fetch user from database`\n\nUse natural language descriptions:\n\n- \"authentication middleware\"\n- \"error handling for API requests\"\n- \"database connection setup\"\n\n### Security Considerations [​](https://docs.roocode.com/features/codebase-indexing\\#security-considerations \"Direct link to Security Considerations\")\n\n- **API Keys**: Stored securely in VS Code's encrypted storage\n- **Code Privacy**: Only small code snippets sent for embedding\n- **Local Processing**: All parsing happens locally\n- **Access Control**: Respects file permissions and ignore patterns\n\n* * *\n\n## Troubleshooting [​](https://docs.roocode.com/features/codebase-indexing\\#troubleshooting \"Direct link to Troubleshooting\")\n\n### Connection Issues [​](https://docs.roocode.com/features/codebase-indexing\\#connection-issues \"Direct link to Connection Issues\")\n\n**\"Connection to Qdrant failed\"**\n\n- Ensure Qdrant is running ( `docker ps` to check)\n- Verify URL matches (default: `http://localhost:6333`)\n- Check firewall/network policies\n- For cloud instances, confirm URL and API key\n\n**\"Invalid API Key\" or \"401 Unauthorized\"**\n\n- Double-check your API key is correct\n- Ensure the key has necessary permissions\n- For Ollama, verify the service is running\n\n### API Key Format Errors (“ByteString conversion”) [​](https://docs.roocode.com/features/codebase-indexing\\#api-key-format-errors-bytestring-conversion \"Direct link to API Key Format Errors (“ByteString conversion”)\")\n\n- Symptom: Error mentions \"ByteString conversion\" during indexing or when saving settings\n- Likely cause: Your embedding provider API key contains invalid/special characters or hidden whitespace\n- Fix:\n  - Regenerate a fresh API key from your provider dashboard\n  - Paste the key again, ensuring no leading/trailing spaces or hidden characters\n  - Roo will display a clear validation message if the key is invalid\n\n### Model Issues [​](https://docs.roocode.com/features/codebase-indexing\\#model-issues \"Direct link to Model Issues\")\n\n**\"Model Not Found\"**\n\n- For Google Gemini: Ensure the model name is correct (e.g., `text-embedding-004`)\n- For other providers: Consult their documentation for available models and proper naming\n\n### Indexing Issues [​](https://docs.roocode.com/features/codebase-indexing\\#indexing-issues \"Direct link to Indexing Issues\")\n\n**\"Stuck in Error State\"**\n\n1. Check connection issues first\n2. Click \"Clear Index & Re-index\" in settings\n3. This resolves corrupted cache or collection issues\n\n**\"Indexing Taking Too Long\"**\n\n- Normal for large codebases (10k+ files)\n- Check `.gitignore` includes large directories\n- Consider adding patterns to `.rooignore`\n\n* * *\n\n## Using the Search Feature [​](https://docs.roocode.com/features/codebase-indexing\\#using-the-search-feature \"Direct link to Using the Search Feature\")\n\nOnce indexed, Roo can use the [`codebase_search`](https://docs.roocode.com/advanced-usage/available-tools/codebase-search) tool:\n\n**Example Natural Language Queries**:\n\n- \"How is user authentication handled?\"\n- \"Database connection setup\"\n- \"Error handling patterns\"\n- \"API endpoint definitions\"\n- \"Component state management\"\n\nThe tool provides:\n\n- Relevant code snippets\n- File paths with line numbers\n- Similarity scores\n- Direct navigation links\n\n* * *\n\n## Privacy & Data Security [​](https://docs.roocode.com/features/codebase-indexing\\#privacy--data-security \"Direct link to Privacy & Data Security\")\n\n**Your code stays private**:\n\n- Only small code chunks (100-1000 chars) sent for embedding\n- Embeddings are one-way mathematical representations\n- Local parsing means full files never leave your machine\n- Use Ollama for completely offline operation\n\n**Data Storage**:\n\n- Vectors stored in your chosen Qdrant instance\n- You control where data lives (local/cloud)\n- Easy to delete: just clear the index\n\n* * *\n\n## Current Limitations [​](https://docs.roocode.com/features/codebase-indexing\\#current-limitations \"Direct link to Current Limitations\")\n\n- **File Size**: 1MB maximum per file\n- **External Dependencies**: Requires embedding provider + Qdrant\n- **Language Support**: Best results with Tree-sitter supported languages\n\n* * *\n\n## Future Enhancements [​](https://docs.roocode.com/features/codebase-indexing\\#future-enhancements \"Direct link to Future Enhancements\")\n\nPlanned improvements:\n\n- Additional embedding providers\n- Multi-workspace indexing\n- Enhanced filtering options\n- Team collaboration features\n- VS Code native search integration\n- Incremental re-indexing optimizations\n\n[Edit this page](https://github.com/RooCodeInc/Roo-Code-Docs/edit/main/docs/features/codebase-indexing.mdx)\n\nLast updated on **Oct 3, 2025**\n\n[Previous\\\\\n\\\\\nCode Actions](https://docs.roocode.com/features/code-actions) [Next\\\\\n\\\\\nCustom Instructions](https://docs.roocode.com/features/custom-instructions)\n\n- [What It Does](https://docs.roocode.com/features/codebase-indexing#what-it-does)\n- [Quick Start Guide](https://docs.roocode.com/features/codebase-indexing#quick-start-guide)\n  - [Step 1: Choose Your Setup](https://docs.roocode.com/features/codebase-indexing#step-1-choose-your-setup)\n  - [Step 2: Set Up Qdrant (Vector Database)](https://docs.roocode.com/features/codebase-indexing#step-2-set-up-qdrant-vector-database)\n  - [Step 3: Set Up an Embedding Provider](https://docs.roocode.com/features/codebase-indexing#step-3-set-up-an-embedding-provider)\n  - [Step 4: Save](https://docs.roocode.com/features/codebase-indexing#step-4-save)\n- [Managing and Configuring the Indexer](https://docs.roocode.com/features/codebase-indexing#managing-and-configuring-the-indexer)\n  - [The Status Icon](https://docs.roocode.com/features/codebase-indexing#the-status-icon)\n  - [The Configuration Popover](https://docs.roocode.com/features/codebase-indexing#the-configuration-popover)\n  - [Detailed Configuration Fields](https://docs.roocode.com/features/codebase-indexing#detailed-configuration-fields)\n- [Key Benefits](https://docs.roocode.com/features/codebase-indexing#key-benefits)\n- [How Files Are Processed](https://docs.roocode.com/features/codebase-indexing#how-files-are-processed)\n  - [Smart Code Parsing](https://docs.roocode.com/features/codebase-indexing#smart-code-parsing)\n  - [File Filtering](https://docs.roocode.com/features/codebase-indexing#file-filtering)\n  - [Incremental Updates](https://docs.roocode.com/features/codebase-indexing#incremental-updates)\n- [Best Practices](https://docs.roocode.com/features/codebase-indexing#best-practices)\n  - [Writing Effective Queries](https://docs.roocode.com/features/codebase-indexing#writing-effective-queries)\n  - [Security Considerations](https://docs.roocode.com/features/codebase-indexing#security-considerations)\n- [Troubleshooting](https://docs.roocode.com/features/codebase-indexing#troubleshooting)\n  - [Connection Issues](https://docs.roocode.com/features/codebase-indexing#connection-issues)\n  - [API Key Format Errors (“ByteString conversion”)](https://docs.roocode.com/features/codebase-indexing#api-key-format-errors-bytestring-conversion)\n  - [Model Issues](https://docs.roocode.com/features/codebase-indexing#model-issues)\n  - [Indexing Issues](https://docs.roocode.com/features/codebase-indexing#indexing-issues)\n- [Using the Search Feature](https://docs.roocode.com/features/codebase-indexing#using-the-search-feature)\n- [Privacy & Data Security](https://docs.roocode.com/features/codebase-indexing#privacy--data-security)\n- [Current Limitations](https://docs.roocode.com/features/codebase-indexing#current-limitations)\n- [Future Enhancements](https://docs.roocode.com/features/codebase-indexing#future-enhancements)\n\n![Roo Code Logo](https://docs.roocode.com/img/roo-code-logo-dark.png)\n\nEmpowering developers to build better software faster with AI-powered tools and insights.\n\n[GitHub](https://github.com/RooCodeInc/Roo-Code)[Discord](https://discord.gg/roocode)[Reddit](https://www.reddit.com/r/RooCode/)[X (Twitter)](https://x.com/roo_code)[LinkedIn](https://www.linkedin.com/company/roo-code)[TikTok](https://www.tiktok.com/@roo.code)[Bluesky](https://bsky.app/profile/roocode.bsky.social)\n\nGitHub\n\n- [Issues](https://github.com/RooCodeInc/Roo-Code/issues)\n- [Feature Requests](https://github.com/RooCodeInc/Roo-Code/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop)\n\nDownload\n\n- [VS Code Marketplace](https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline)\n- [Open VSX Registry](https://open-vsx.org/extension/RooVeterinaryInc/roo-cline)\n\nCompany\n\n- [Contact](mailto:support@roocode.com)\n- [Careers](https://careers.roocode.com/)\n- [Website Privacy Policy](https://roocode.com/privacy)\n- [Extension Privacy Policy](https://github.com/RooCodeInc/Roo-Code/blob/main/PRIVACY.md)\n\nLike most of the internet, we use cookies. Are you OK with that?\n\nDeclineAccept",
  "metadata": {
    "docsearch:language": "en",
    "ogTitle": "Codebase Indexing | Roo Code Documentation",
    "docusaurus_tag": "docs-default-current",
    "viewport": [
      "width=device-width, initial-scale=1.0",
      "width=device-width, initial-scale=1"
    ],
    "ogUrl": "https://docs.roocode.com/features/codebase-indexing",
    "og:locale": "en_US",
    "og:image": "https://docs.roocode.com/img/social-share.jpg",
    "og:url": "https://docs.roocode.com/features/codebase-indexing",
    "twitter:card": "summary_large_image",
    "twitter:site": "@roo_code",
    "twitter:image": "https://docs.roocode.com/img/social-share.jpg",
    "favicon": "https://docs.roocode.com/img/favicon.ico",
    "docsearch:docusaurus_tag": "docs-default-current",
    "og:type": "website",
    "generator": "Docusaurus v3.9.2",
    "ogDescription": "Learn how Codebase Indexing helps Roo Code understand large projects using AI embeddings and semantic search. Setup guide for OpenAI and Qdrant integration.",
    "ogImage": "https://docs.roocode.com/img/social-share.jpg",
    "docusaurus_version": "current",
    "description": "Learn how Codebase Indexing helps Roo Code understand large projects using AI embeddings and semantic search. Setup guide for OpenAI and Qdrant integration.",
    "language": "en",
    "keywords": "codebase indexing,semantic search,AI embeddings,OpenAI,Qdrant,large projects,code search",
    "ogLocale": "en_US",
    "og:title": "Codebase Indexing | Roo Code Documentation",
    "docusaurus_locale": "en",
    "og:description": "Learn how Codebase Indexing helps Roo Code understand large projects using AI embeddings and semantic search. Setup guide for OpenAI and Qdrant integration.",
    "twitter:creator": "@roo_code",
    "docsearch:version": "current",
    "title": "Codebase Indexing | Roo Code Documentation",
    "scrapeId": "0dd7050b-c980-42c5-accd-7c0a21a52a73",
    "sourceURL": "https://docs.roocode.com/features/codebase-indexing",
    "url": "https://docs.roocode.com/features/codebase-indexing",
    "statusCode": 200,
    "contentType": "text/html; charset=utf-8",
    "proxyUsed": "basic",
    "cacheState": "miss",
    "creditsUsed": 1
  }
}