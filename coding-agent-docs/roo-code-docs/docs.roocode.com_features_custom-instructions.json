{
  "markdown": "Get comprehensive, actionable reviews directly in your PRs. [Try Roo's PR Reviewer](https://roocode.com/reviewer?utm_source=docs&utm_medium=banner&utm_campaign=reviewer_promo)\n\n[Skip to main content](https://docs.roocode.com/features/custom-instructions#__docusaurus_skipToContent_fallback)\n\n[![Roo Code Logo](https://docs.roocode.com/img/roo-code-logo-dark.png)](https://docs.roocode.com/)\n\n`ctrl`  `K`\n\n[Reddit](https://www.reddit.com/r/RooCode/ \"Reddit\")[Discord](https://discord.gg/roocode \"Discord\")\n\n[20.3k](https://github.com/RooCodeInc/Roo-Code \"GitHub Repository\") [Install ·935.3k](https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline \"Install VS Code Extension\")\n\n- [Welcome](https://docs.roocode.com/)\n- [Getting Started](https://docs.roocode.com/features/custom-instructions#)\n\n- [Tutorial Videos](https://docs.roocode.com/features/custom-instructions#)\n\n- [Roo Code Cloud](https://docs.roocode.com/features/custom-instructions#)\n\n- Features\n\n  - [API Configuration Profiles](https://docs.roocode.com/features/api-configuration-profiles)\n  - [Auto-Approving Actions](https://docs.roocode.com/features/auto-approving-actions)\n  - [Boomerang Tasks](https://docs.roocode.com/features/boomerang-tasks)\n  - [Browser Use](https://docs.roocode.com/features/browser-use)\n  - [Checkpoints](https://docs.roocode.com/features/checkpoints)\n  - [Code Actions](https://docs.roocode.com/features/code-actions)\n  - [Codebase Indexing](https://docs.roocode.com/features/codebase-indexing)\n  - [Custom Instructions](https://docs.roocode.com/features/custom-instructions)\n  - [Diagnostics Integration](https://docs.roocode.com/features/diagnostics-integration)\n  - [Customizing Modes](https://docs.roocode.com/features/custom-modes)\n  - [Diff/Fast Edits](https://docs.roocode.com/features/fast-edits)\n  - [Enhance Prompt](https://docs.roocode.com/features/enhance-prompt)\n  - [Import/Export/Reset Settings](https://docs.roocode.com/features/settings-management)\n  - [Intelligent Context Condensing](https://docs.roocode.com/features/intelligent-context-condensing)\n  - [Keyboard Navigation](https://docs.roocode.com/features/keyboard-shortcuts)\n  - [Roo Code Marketplace](https://docs.roocode.com/features/marketplace)\n  - [Message Queueing](https://docs.roocode.com/features/message-queueing)\n  - [Model Temperature](https://docs.roocode.com/features/model-temperature)\n  - [Multi-File Reads](https://docs.roocode.com/features/concurrent-file-reads)\n  - [.rooignore](https://docs.roocode.com/features/rooignore)\n  - [Slash Commands](https://docs.roocode.com/features/slash-commands)\n  - [Suggested Responses](https://docs.roocode.com/features/suggested-responses)\n  - [Task Todo List](https://docs.roocode.com/features/task-todo-list)\n  - [Terminal Shell Integration](https://docs.roocode.com/features/shell-integration)\n  - [MCP](https://docs.roocode.com/features/custom-instructions#)\n\n  - [Experimental](https://docs.roocode.com/features/custom-instructions#)\n\n  - [Additional Features](https://docs.roocode.com/features/more-features)\n- [Advanced Usage](https://docs.roocode.com/features/custom-instructions#)\n\n- [Model Providers](https://docs.roocode.com/features/custom-instructions#)\n\n- [FAQ](https://docs.roocode.com/features/custom-instructions#)\n\n- [Contributing (GitHub)](https://github.com/RooCodeInc/Roo-Code/blob/main/CONTRIBUTING.md)\n- [Roocabulary (GitHub)](https://github.com/cannuri/Roocabulary)\n- [Update Notes](https://docs.roocode.com/features/custom-instructions#)\n\n\n- [Home page](https://docs.roocode.com/)\n- Features\n- Custom Instructions\n\nCopy Page\n\nOn this page\n\n# Custom Instructions\n\nCustom Instructions allow you to personalize how Roo behaves, providing specific guidance that shapes responses, coding style, and decision-making processes.\n\nInstruction File Locations\n\nYou can provide custom instructions using global rules (applied across all projects), workspace rules (project-specific), or through the Prompts tab interface.\n\n**Global Rules Directory:** Apply to all projects automatically.\n\n- **Linux/macOS:** `~/.roo/rules/` and `~/.roo/rules-{modeSlug}/`\n- **Windows:** `%USERPROFILE%\\.roo\\rules\\` and `%USERPROFILE%\\.roo\\rules-{modeSlug}\\`\n\n**Workspace Rules:** Apply only to the current project, can override global rules.\n\n- **Preferred Method: Directory ( `.roo/rules/`)**\n\n\n\n\n```codeBlockLines_e6Vv\n.\n├── .roo/\n│   └── rules/          # Workspace-wide rules\n│       ├── 01-general.md\n│       └── 02-coding-style.txt\n└── ... (other project files)\n\n```\n\n- **Fallback Method: Single File ( `.roorules`)**\n\n\n\n\n```codeBlockLines_e6Vv\n.\n├── .roorules           # Workspace-wide rules (single file)\n└── ... (other project files)\n\n```\n\n\n**Mode-Specific Instructions:** Apply only to a specific mode (e.g., `code`).\n\n- **Preferred Method: Directory ( `.roo/rules-{modeSlug}/`)**\n\n\n\n\n```codeBlockLines_e6Vv\n.\n├── .roo/\n│   └── rules-code/     # Rules for \"code\" mode\n│       ├── 01-js-style.md\n│       └── 02-ts-style.md\n└── ... (other project files)\n\n```\n\n- **Fallback Method: Single File ( `.roorules-{modeSlug}`)**\n\n\n\n\n```codeBlockLines_e6Vv\n.\n├── .roorules-code      # Rules for \"code\" mode (single file)\n└── ... (other project files)\n\n```\n\n\nRules are loaded in order: Global rules first, then workspace rules (which can override global rules). See [Global Rules Directory](https://docs.roocode.com/features/custom-instructions#global-rules-directory) for details.\n\n* * *\n\n## What Are Custom Instructions? [​](https://docs.roocode.com/features/custom-instructions\\#what-are-custom-instructions \"Direct link to What Are Custom Instructions?\")\n\nCustom Instructions define specific behaviors, preferences, and constraints beyond Roo's basic role definition. Examples include coding style, documentation standards, testing requirements, and workflow guidelines.\n\n* * *\n\n## Setting Custom Instructions [​](https://docs.roocode.com/features/custom-instructions\\#setting-custom-instructions \"Direct link to Setting Custom Instructions\")\n\n### Global Custom Instructions [​](https://docs.roocode.com/features/custom-instructions\\#global-custom-instructions \"Direct link to Global Custom Instructions\")\n\nThese instructions apply across all workspaces and maintain your preferences regardless of which project you're working on.\n\n**How to set them:**\n\n![Roo Code Prompts tab showing global custom instructions interface](https://docs.roocode.com/img/custom-instructions/custom-instructions.png)\n\n1. **Open Prompts Tab:** Click the  icon in the Roo Code top menu bar\n2. **Find Section:** Find the \"Custom Instructions for All Modes\" section\n3. **Enter Instructions:** Enter your instructions in the text area\n4. **Save Changes:** Click \"Done\" to save your changes\n\n### Global Rules Directory [​](https://docs.roocode.com/features/custom-instructions\\#global-rules-directory \"Direct link to Global Rules Directory\")\n\nThe Global Rules Directory feature provides reusable rules and custom instructions that automatically apply across all your projects. This system supports both global configurations and project-specific overrides.\n\n#### Key Benefits [​](https://docs.roocode.com/features/custom-instructions\\#key-benefits \"Direct link to Key Benefits\")\n\n**Without Global Rules**: You had to maintain separate rule files in each project:\n\n- Copy the same rules to every new project\n- Update rules manually across multiple projects\n- No consistency between projects\n\n**With Global Rules**: Create rules once and use them everywhere:\n\n- Set up your preferred coding standards globally\n- Override specific rules per project when needed\n- Maintain consistency across all your work\n- Easy to update rules for all projects at once\n\n#### Directory Structure [​](https://docs.roocode.com/features/custom-instructions\\#directory-structure \"Direct link to Directory Structure\")\n\nThe global rules directory location is fixed and cannot be customized:\n\n**Linux/macOS:**\n\n```codeBlockLines_e6Vv\n~/.roo/                           # Your global Roo configuration\n├── rules/                        # General rules applied to all projects\n│   ├── coding-standards.md\n│   ├── formatting-rules.md\n│   └── security-guidelines.md\n├── rules-code/                   # Rules specific to Code mode\n│   ├── typescript-rules.md\n│   └── testing-requirements.md\n├── rules-docs-extractor/         # Rules for documentation extraction\n│   └── documentation-style.md\n└── rules-{mode}/                 # Rules for other specific modes\n    └── mode-specific-rules.md\n\n```\n\n**Windows:**\n\n```codeBlockLines_e6Vv\n%USERPROFILE%\\.roo\\               # Your global Roo configuration\n├── rules\\                        # General rules applied to all projects\n│   ├── coding-standards.md\n│   ├── formatting-rules.md\n│   └── security-guidelines.md\n├── rules-code\\                   # Rules specific to Code mode\n│   ├── typescript-rules.md\n│   └── testing-requirements.md\n└── rules-{mode}\\                 # Rules for other specific modes\n    └── mode-specific-rules.md\n\n```\n\n#### Setting Up Global Rules [​](https://docs.roocode.com/features/custom-instructions\\#setting-up-global-rules \"Direct link to Setting Up Global Rules\")\n\n1. **Create Global Rules Directory:**\n\n\n\n\n\n```codeBlockLines_e6Vv\n# Linux/macOS\nmkdir -p ~/.roo/rules\n\n# Windows\nmkdir %USERPROFILE%\\.roo\\rules\n\n```\n\n2. **Add General Rules** ( `~/.roo/rules/coding-standards.md`):\n\n\n\n\n\n```codeBlockLines_e6Vv\n# Global Coding Standards\n\n1. Always use TypeScript for new projects\n2. Write unit tests for all new functions\n3. Use descriptive variable names\n4. Add JSDoc comments for public APIs\n\n```\n\n3. **Add Mode-Specific Rules** ( `~/.roo/rules-code/typescript-rules.md`):\n\n\n\n\n\n```codeBlockLines_e6Vv\n# TypeScript Code Mode Rules\n\n1. Use strict mode in tsconfig.json\n2. Prefer interfaces over type aliases for object shapes\n3. Always specify return types for functions\n\n```\n\n#### Available Rule Directories [​](https://docs.roocode.com/features/custom-instructions\\#available-rule-directories \"Direct link to Available Rule Directories\")\n\n| Directory | Purpose |\n| --- | --- |\n| `rules/` | General rules applied to all modes |\n| `rules-code/` | Rules specific to Code mode |\n| `rules-docs-extractor/` | Rules for documentation extraction |\n| `rules-architect/` | Rules for system architecture tasks |\n| `rules-debug/` | Rules for debugging workflows |\n| `rules-{mode}/` | Rules for any custom mode |\n\n#### Rule Loading Order [​](https://docs.roocode.com/features/custom-instructions\\#rule-loading-order \"Direct link to Rule Loading Order\")\n\nRules are loaded in this order:\n\n1. **Global Rules** (from `~/.roo/`)\n2. **Project Rules** (from `project/.roo/`) \\- can override global rules\n3. **Legacy Files** ( `.roorules`, `.clinerules` \\- for backward compatibility)\n\nWithin each level, mode-specific rules are loaded before general rules.\n\n### Workspace-Level Instructions [​](https://docs.roocode.com/features/custom-instructions\\#workspace-level-instructions \"Direct link to Workspace-Level Instructions\")\n\nThese instructions only apply within your current workspace, allowing you to customize Roo Code's behavior for specific projects.\n\n#### Workspace-Wide Instructions via Files/Directories [​](https://docs.roocode.com/features/custom-instructions\\#workspace-wide-instructions-via-filesdirectories \"Direct link to Workspace-Wide Instructions via Files/Directories\")\n\nWorkspace-wide instructions apply to all modes within the current project and can be defined using files:\n\n- **Preferred Method: Directory-Based ( `.roo/rules/`)**\n  - Create a directory named `.roo/rules/` in your workspace root.\n  - Place instruction files (e.g., `.md`, `.txt`) inside. Roo Code reads files recursively (including subdirectories), appending their content to the system prompt in **alphabetical order** based on filename.\n  - When this directory exists and contains files, its contents are loaded along with any global rules directories.\n  - Note: If the `.roo/rules/` directory exists but is empty, Roo Code will fall back to using the `.roorules` file instead.\n- **Fallback Method: File-Based ( `.roorules`)**\n  - If `.roo/rules/` doesn't exist or is empty, Roo Code looks for a single `.roorules` file in the workspace root.\n  - If found, its content is loaded.\n\n#### Mode-Specific Instructions [​](https://docs.roocode.com/features/custom-instructions\\#mode-specific-instructions \"Direct link to Mode-Specific Instructions\")\n\nMode-specific instructions can be set in two independent ways that can be used simultaneously:\n\n1. **Using the Prompts Tab:**\n![Roo Code Prompts tab showing mode-specific custom instructions interface](https://docs.roocode.com/img/custom-instructions/custom-instructions-2.png)   - **Open Tab:** Click the  icon in the Roo Code top menu bar\n\n   - **Select Mode:** Under the Modes heading, click the button for the mode you want to customize\n\n   - **Enter Instructions:** Enter your instructions in the text area under \"Mode-specific Custom Instructions (optional)\"\n\n   - **Save Changes:** Click \"Done\" to save your changes\n\n\n\n     Global Mode Rules\n\n\n\n\n\n     If the mode itself is global (not workspace-specific), any custom instructions you set for it will also apply globally for that mode across all workspaces.\n2. **Using Rule Files/Directories:** Provide mode-specific instructions via files:\n   - **Preferred Method: Directory-Based ( `.roo/rules-{modeSlug}/`)**\n     - Create a directory named `.roo/rules-{modeSlug}/` (e.g., `.roo/rules-docs-writer/`) in your workspace root.\n     - Place instruction files inside (recursive loading, including subdirectories). Files are read and appended to the system prompt in **alphabetical order** by filename.\n     - This method takes precedence over the fallback file method for the specific mode if the directory exists and contains files.\n   - **Fallback Method: File-Based ( `.roorules-{modeSlug}`)**\n     - If `.roo/rules-{modeSlug}/` doesn't exist or is empty, Roo Code looks for a single `.roorules-{modeSlug}` file (e.g., `.roorules-code`) in the workspace root.\n     - If found, its content is loaded for that mode.\n\nInstructions from the Prompts tab, global rules, workspace rules, and mode-specific rules are all combined. See the section below for the exact order.\n\n* * *\n\n## How Instructions are Combined [​](https://docs.roocode.com/features/custom-instructions\\#how-instructions-are-combined \"Direct link to How Instructions are Combined\")\n\nInstructions are placed in the system prompt in this exact format:\n\n```codeBlockLines_e6Vv\n====\nUSER'S CUSTOM INSTRUCTIONS\n\nThe following additional instructions are provided by the user, and should be followed to the best of your ability without interfering with the TOOL USE guidelines.\n\nLanguage Preference:\n[Language preference if set]\n\nGlobal Instructions:\n[Global Instructions from Prompts Tab]\n\nMode-specific Instructions:\n[Mode-specific Instructions from Prompts Tab for the current mode]\n\nRules:\n\n# Rules from rules-{modeSlug} directories:\n[Contents of ALL files from ~/.roo/rules-{modeSlug}/ AND .roo/rules-{modeSlug}/ if they exist]\n\n# Rules from .roorules-{modeSlug}:\n[Contents of .roorules-{modeSlug} file if no mode-specific directories have files]\n\n# Rules from .rooignore:\n[.rooignore-related instructions if applicable]\n\n# Agent Rules Standard (AGENTS.md):\n[Contents of AGENTS.md or AGENT.md from workspace root if present and enabled]\n\n# Rules from rules directories:\n[Contents of ALL files from ~/.roo/rules/ AND .roo/rules/ if they exist]\n\n# Rules from .roorules:\n[Contents of .roorules file if no general rules directories have files]\n\n====\n\n```\n\n_Note: The system loads rules from ALL applicable directories (both global `~/.roo/` and workspace `.roo/`), not just the first one with files. Mode-specific rules appear before general rules. Directory-based rules take precedence over file-based fallbacks only when determining which method to use, but all applicable directories are read._\n\n* * *\n\n## Rules about .rules files [​](https://docs.roocode.com/features/custom-instructions\\#rules-about-rules-files \"Direct link to Rules about .rules files\")\n\n- **File Location:** The preferred method uses directories within `.roo/` ( `.roo/rules/` and `.roo/rules-{modeSlug}/`). The fallback method uses single files ( `.roorules` and `.roorules-{modeSlug}`) located directly in the workspace root.\n- **Recursive Reading:** Rules directories are read recursively, including all files in subdirectories\n- **File Filtering:** System automatically excludes cache and temporary files ( `.DS_Store`, `*.bak`, `*.cache`, `*.log`, `*.tmp`, `Thumbs.db`, etc.)\n- **Empty Files:** Empty or missing rule files are silently skipped\n- **Source Headers:** Directory-based rules are included without headers, while file-based rules include `# Rules from {filename}:` headers\n- **Rule Interaction:** Mode-specific rules complement global rules rather than replacing them\n- **Symbolic Links:** Fully supported for both files and directories, with a maximum resolution depth of 5 to prevent infinite loops\n\n* * *\n\n## AGENTS.md Support [​](https://docs.roocode.com/features/custom-instructions\\#agentsmd-support \"Direct link to AGENTS.md Support\")\n\nRoo Code also supports loading rules from an `AGENTS.md` (or `AGENT.md` as fallback) file in your workspace root:\n\n- **Purpose:** Provides agent-specific rules and guidelines for AI behavior\n- **Location:** Must be in the workspace root directory\n- **Loading:** Automatically loaded by default. To disable AGENTS.md loading, set `\"roo-cline.useAgentRules\": false` in your VSCode settings\n- **Priority:** Loaded after mode-specific rules but before general workspace rules\n- **Header:** Added to system prompt with header `# Agent Rules Standard (AGENTS.md):`\n- **Symbolic Links:** Supports symbolic links to AGENTS.md files in other locations\n\nThis feature allows teams to maintain standardized AI agent behavior rules that can be version-controlled alongside the project code.\n\n* * *\n\n## Examples of Custom Instructions [​](https://docs.roocode.com/features/custom-instructions\\#examples-of-custom-instructions \"Direct link to Examples of Custom Instructions\")\n\n- \"Always use spaces for indentation, with a width of 4 spaces\"\n- \"Use camelCase for variable names\"\n- \"Write unit tests for all new functions\"\n- \"Explain your reasoning before providing code\"\n- \"Focus on code readability and maintainability\"\n- \"Prioritize using the most common library in the community\"\n- \"When adding new features to websites, ensure they are responsive and accessible\"\n\nPro Tip: Team Standardization\n\nFor team environments, consider these approaches:\n\n**Project Standards**: Use workspace `.roo/rules/` directories under version control to standardize Roo's behavior for specific projects. This ensures consistent code style and development workflows across team members.\n\n**Organization Standards**: Use global rules ( `~/.roo/rules/`) to establish organization-wide coding standards that apply to all projects. Team members can set up identical global rules for consistency across all work.\n\n**Hybrid Approach**: Combine global rules for organization standards with project-specific workspace rules for project-specific requirements. Workspace rules can override global rules when needed.\n\nThe directory-based approach offers better organization than single `.roorules` files and supports both global and project-level customization.\n\n* * *\n\n## Combining with Custom Modes [​](https://docs.roocode.com/features/custom-instructions\\#combining-with-custom-modes \"Direct link to Combining with Custom Modes\")\n\nFor advanced customization, combine with [Custom Modes](https://docs.roocode.com/features/custom-modes) to create specialized environments with specific tool access, file restrictions, and tailored instructions.\n\n[Edit this page](https://github.com/RooCodeInc/Roo-Code-Docs/edit/main/docs/features/custom-instructions.md)\n\nLast updated on **Oct 3, 2025**\n\n[Previous\\\\\n\\\\\nCodebase Indexing](https://docs.roocode.com/features/codebase-indexing) [Next\\\\\n\\\\\nDiagnostics Integration](https://docs.roocode.com/features/diagnostics-integration)\n\n- [What Are Custom Instructions?](https://docs.roocode.com/features/custom-instructions#what-are-custom-instructions)\n- [Setting Custom Instructions](https://docs.roocode.com/features/custom-instructions#setting-custom-instructions)\n  - [Global Custom Instructions](https://docs.roocode.com/features/custom-instructions#global-custom-instructions)\n  - [Global Rules Directory](https://docs.roocode.com/features/custom-instructions#global-rules-directory)\n  - [Workspace-Level Instructions](https://docs.roocode.com/features/custom-instructions#workspace-level-instructions)\n- [How Instructions are Combined](https://docs.roocode.com/features/custom-instructions#how-instructions-are-combined)\n- [Rules about .rules files](https://docs.roocode.com/features/custom-instructions#rules-about-rules-files)\n- [AGENTS.md Support](https://docs.roocode.com/features/custom-instructions#agentsmd-support)\n- [Examples of Custom Instructions](https://docs.roocode.com/features/custom-instructions#examples-of-custom-instructions)\n- [Combining with Custom Modes](https://docs.roocode.com/features/custom-instructions#combining-with-custom-modes)\n\n![Roo Code Logo](https://docs.roocode.com/img/roo-code-logo-dark.png)\n\nEmpowering developers to build better software faster with AI-powered tools and insights.\n\n[GitHub](https://github.com/RooCodeInc/Roo-Code)[Discord](https://discord.gg/roocode)[Reddit](https://www.reddit.com/r/RooCode/)[X (Twitter)](https://x.com/roo_code)[LinkedIn](https://www.linkedin.com/company/roo-code)[TikTok](https://www.tiktok.com/@roo.code)[Bluesky](https://bsky.app/profile/roocode.bsky.social)\n\nGitHub\n\n- [Issues](https://github.com/RooCodeInc/Roo-Code/issues)\n- [Feature Requests](https://github.com/RooCodeInc/Roo-Code/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop)\n\nDownload\n\n- [VS Code Marketplace](https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline)\n- [Open VSX Registry](https://open-vsx.org/extension/RooVeterinaryInc/roo-cline)\n\nCompany\n\n- [Contact](mailto:support@roocode.com)\n- [Careers](https://careers.roocode.com/)\n- [Website Privacy Policy](https://roocode.com/privacy)\n- [Extension Privacy Policy](https://github.com/RooCodeInc/Roo-Code/blob/main/PRIVACY.md)\n\nLike most of the internet, we use cookies. Are you OK with that?\n\nDeclineAccept",
  "metadata": {
    "og:url": "https://docs.roocode.com/features/custom-instructions",
    "og:locale": "en_US",
    "og:title": "Custom Instructions | Roo Code Documentation",
    "twitter:creator": "@roo_code",
    "twitter:site": "@roo_code",
    "og:image": "https://docs.roocode.com/img/social-share.jpg",
    "twitter:card": "summary_large_image",
    "twitter:image": "https://docs.roocode.com/img/social-share.jpg",
    "docsearch:version": "current",
    "ogDescription": "Learn how to use custom instructions to tailor Roo Code's behavior to your preferences, coding style, and project requirements.",
    "title": "Custom Instructions | Roo Code Documentation",
    "favicon": "https://docs.roocode.com/img/favicon.ico",
    "ogLocale": "en_US",
    "ogUrl": "https://docs.roocode.com/features/custom-instructions",
    "description": "Learn how to use custom instructions to tailor Roo Code's behavior to your preferences, coding style, and project requirements.",
    "generator": "Docusaurus v3.9.2",
    "docusaurus_version": "current",
    "docusaurus_tag": "docs-default-current",
    "og:type": "website",
    "docsearch:docusaurus_tag": "docs-default-current",
    "keywords": "custom instructions,personalization,AI customization,coding preferences,project rules",
    "language": "en",
    "docsearch:language": "en",
    "docusaurus_locale": "en",
    "ogImage": "https://docs.roocode.com/img/social-share.jpg",
    "ogTitle": "Custom Instructions | Roo Code Documentation",
    "og:description": "Learn how to use custom instructions to tailor Roo Code's behavior to your preferences, coding style, and project requirements.",
    "viewport": "width=device-width, initial-scale=1.0",
    "scrapeId": "48bdb2e8-b30c-4446-b06e-0f082da111d5",
    "sourceURL": "https://docs.roocode.com/features/custom-instructions",
    "url": "https://docs.roocode.com/features/custom-instructions",
    "statusCode": 200,
    "contentType": "text/html; charset=utf-8",
    "proxyUsed": "basic",
    "cacheState": "miss",
    "indexId": "6c76c33f-916b-4265-aa15-ff7cfac6f4a3",
    "creditsUsed": 1
  }
}