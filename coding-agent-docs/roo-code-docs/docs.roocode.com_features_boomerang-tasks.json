{
  "markdown": "Get comprehensive, actionable reviews directly in your PRs. [Try Roo's PR Reviewer](https://roocode.com/reviewer?utm_source=docs&utm_medium=banner&utm_campaign=reviewer_promo)\n\n[Skip to main content](https://docs.roocode.com/features/boomerang-tasks#__docusaurus_skipToContent_fallback)\n\n[![Roo Code Logo](https://docs.roocode.com/img/roo-code-logo-dark.png)](https://docs.roocode.com/)\n\n`ctrl`  `K`\n\n[Reddit](https://www.reddit.com/r/RooCode/ \"Reddit\")[Discord](https://discord.gg/roocode \"Discord\")\n\n[20.3k](https://github.com/RooCodeInc/Roo-Code \"GitHub Repository\") [Install ¬∑574.1k](https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline \"Install VS Code Extension\")\n\n- [Welcome](https://docs.roocode.com/)\n- [Getting Started](https://docs.roocode.com/features/boomerang-tasks#)\n\n- [Tutorial Videos](https://docs.roocode.com/features/boomerang-tasks#)\n\n- [Roo Code Cloud](https://docs.roocode.com/features/boomerang-tasks#)\n\n- Features\n\n  - [API Configuration Profiles](https://docs.roocode.com/features/api-configuration-profiles)\n  - [Auto-Approving Actions](https://docs.roocode.com/features/auto-approving-actions)\n  - [Boomerang Tasks](https://docs.roocode.com/features/boomerang-tasks)\n  - [Browser Use](https://docs.roocode.com/features/browser-use)\n  - [Checkpoints](https://docs.roocode.com/features/checkpoints)\n  - [Code Actions](https://docs.roocode.com/features/code-actions)\n  - [Codebase Indexing](https://docs.roocode.com/features/codebase-indexing)\n  - [Custom Instructions](https://docs.roocode.com/features/custom-instructions)\n  - [Diagnostics Integration](https://docs.roocode.com/features/diagnostics-integration)\n  - [Customizing Modes](https://docs.roocode.com/features/custom-modes)\n  - [Diff/Fast Edits](https://docs.roocode.com/features/fast-edits)\n  - [Enhance Prompt](https://docs.roocode.com/features/enhance-prompt)\n  - [Import/Export/Reset Settings](https://docs.roocode.com/features/settings-management)\n  - [Intelligent Context Condensing](https://docs.roocode.com/features/intelligent-context-condensing)\n  - [Keyboard Navigation](https://docs.roocode.com/features/keyboard-shortcuts)\n  - [Roo Code Marketplace](https://docs.roocode.com/features/marketplace)\n  - [Message Queueing](https://docs.roocode.com/features/message-queueing)\n  - [Model Temperature](https://docs.roocode.com/features/model-temperature)\n  - [Multi-File Reads](https://docs.roocode.com/features/concurrent-file-reads)\n  - [.rooignore](https://docs.roocode.com/features/rooignore)\n  - [Slash Commands](https://docs.roocode.com/features/slash-commands)\n  - [Suggested Responses](https://docs.roocode.com/features/suggested-responses)\n  - [Task Todo List](https://docs.roocode.com/features/task-todo-list)\n  - [Terminal Shell Integration](https://docs.roocode.com/features/shell-integration)\n  - [MCP](https://docs.roocode.com/features/boomerang-tasks#)\n\n  - [Experimental](https://docs.roocode.com/features/boomerang-tasks#)\n\n  - [Additional Features](https://docs.roocode.com/features/more-features)\n- [Advanced Usage](https://docs.roocode.com/features/boomerang-tasks#)\n\n- [Model Providers](https://docs.roocode.com/features/boomerang-tasks#)\n\n- [FAQ](https://docs.roocode.com/features/boomerang-tasks#)\n\n- [Contributing (GitHub)](https://github.com/RooCodeInc/Roo-Code/blob/main/CONTRIBUTING.md)\n- [Roocabulary (GitHub)](https://github.com/cannuri/Roocabulary)\n- [Update Notes](https://docs.roocode.com/features/boomerang-tasks#)\n\n\n- [Home page](https://docs.roocode.com/)\n- Features\n- Boomerang Tasks\n\nCopy Page\n\nOn this page\n\n# Boomerang Tasks: Orchestrate Complex Workflows\n\nBoomerang Tasks (also known as subtasks or task orchestration) allow you to break down complex projects into smaller, manageable pieces using the built-in **`ü™É Orchestrator` Mode (aka Boomerang Mode)**. Think of it like delegating parts of your work to specialized assistants. Each subtask runs in its own context, often using a different Roo Code mode tailored for that specific job (like [`üíª Code`](https://docs.roocode.com/basic-usage/using-modes#code-mode-default), [`üèóÔ∏è Architect`](https://docs.roocode.com/basic-usage/using-modes#architect-mode), or [`ü™≤ Debug`](https://docs.roocode.com/basic-usage/using-modes#debug-mode)). The Orchestrator mode manages this process.\n\nRoo Code Boomerang Tasks (also known as subtasks or task orchestration) - YouTube\n\n[Photo image of Roo Code](https://www.youtube.com/channel/UCfCnIRjGVRzwy8YqelcV13w?embeds_referring_euri=https%3A%2F%2Fdocs.roocode.com%2F)\n\nRoo Code\n\n3.81K subscribers\n\n[Roo Code Boomerang Tasks (also known as subtasks or task orchestration)](https://www.youtube.com/watch?v=RX862U09fnE)\n\nRoo Code\n\nSearch\n\nWatch later\n\nShare\n\nCopy link\n\nInfo\n\nShopping\n\nTap to unmute\n\nIf playback doesn't begin shortly, try restarting your device.\n\nMore videos\n\n## More videos\n\nYou're signed out\n\nVideos you watch may be added to the TV's watch history and influence TV recommendations. To avoid this, cancel and sign in to YouTube on your computer.\n\nCancelConfirm\n\nShare\n\nInclude playlist\n\nAn error occurred while retrieving sharing information. Please try again later.\n\n[Watch on](https://www.youtube.com/watch?v=RX862U09fnE&embeds_referring_euri=https%3A%2F%2Fdocs.roocode.com%2F)\n\n0:00\n\n0:00 / 2:31\n‚Ä¢Live\n\n‚Ä¢\n\nOrchestrator Mode is Built-In\n\nThe `ü™É Orchestrator` mode (previously achieved via a custom \"Boomerang Mode\") is now a built-in mode specifically designed to orchestrate workflows by breaking down tasks and delegating them to other modes. You no longer need to create a custom mode for this functionality.\n\nLearn more about [Built-in Modes](https://docs.roocode.com/basic-usage/using-modes#built-in-modes).\n\n* * *\n\n## Why Use Boomerang Tasks? [‚Äã](https://docs.roocode.com/features/boomerang-tasks\\#why-use-boomerang-tasks \"Direct link to Why Use Boomerang Tasks?\")\n\n- **Tackle Complexity:** Break large, multi-step projects (e.g., building a full feature) into focused subtasks (e.g., design, implementation, documentation).\n- **Use Specialized Modes:** Automatically delegate subtasks to the mode best suited for that specific piece of work, leveraging specialized capabilities for optimal results.\n- **Maintain Focus & Efficiency:** Each subtask operates in its own isolated context with a separate conversation history. This prevents the parent (orchestrator) task from becoming cluttered with the detailed execution steps (like code diffs or file analysis results), allowing it to focus efficiently on the high-level workflow and manage the overall process based on concise summaries from completed subtasks.\n- **Streamline Workflows:** Results from one subtask can be automatically passed to the next, creating a smooth flow (e.g., architectural decisions feeding into the coding task).\n\n* * *\n\n## How It Works [‚Äã](https://docs.roocode.com/features/boomerang-tasks\\#how-it-works \"Direct link to How It Works\")\n\n1. When in the [`ü™É Orchestrator`](https://docs.roocode.com/basic-usage/using-modes#orchestrator-mode-aka-boomerang-mode) mode (aka Boomerang Mode), Roo analyzes a complex task and suggests breaking it down into a subtask[1](https://docs.roocode.com/features/boomerang-tasks#user-content-fn-1).\n\n2. The parent task (in Orchestrator mode) pauses, and the new subtask begins in a different, specialized mode[2](https://docs.roocode.com/features/boomerang-tasks#user-content-fn-2).\n\n3. When the subtask's goal is achieved, Roo signals completion.\n\n4. The parent task resumes with only the summary[3](https://docs.roocode.com/features/boomerang-tasks#user-content-fn-3) of the subtask. The parent uses this summary to continue the main workflow.\n\n\n* * *\n\n## Key Considerations [‚Äã](https://docs.roocode.com/features/boomerang-tasks\\#key-considerations \"Direct link to Key Considerations\")\n\n- **Approval Required:** By default, you must approve the creation and completion of each subtask. This can be automated via the [Auto-Approving Actions](https://docs.roocode.com/features/auto-approving-actions#subtasks) settings if desired.\n- **Context Isolation and Transfer:** Each subtask operates in complete isolation with its own conversation history. It does not automatically inherit the parent's context. Information must be explicitly passed:\n  - **Down:** Via the initial instructions provided when the subtask is created.\n  - **Up:** Via the final summary provided when the subtask finishes. Be mindful that only this summary returns to the parent.\n- **Navigation:** Roo's interface helps you see the hierarchy of tasks (which task is the parent, which are children). You can typically navigate between active and paused tasks.\n\nBoomerang Tasks provide a powerful way to manage complex development workflows directly within Roo Code, leveraging specialized modes for maximum efficiency.\n\nKeep Tasks Focused\n\nUse subtasks (delegated via Orchestrator mode) to maintain clarity. If a request significantly shifts focus or requires a different expertise (mode), consider creating a subtask rather than overloading the current one.\n\n* * *\n\n## Frequently Asked Questions [‚Äã](https://docs.roocode.com/features/boomerang-tasks\\#frequently-asked-questions \"Direct link to Frequently Asked Questions\")\n\n### Why can't Orchestrator mode read files, write files, call MCPs, or run commands? [‚Äã](https://docs.roocode.com/features/boomerang-tasks\\#why-cant-orchestrator-mode-read-files-write-files-call-mcps-or-run-commands \"Direct link to Why can't Orchestrator mode read files, write files, call MCPs, or run commands?\")\n\nThe Orchestrator mode is intentionally limited to focus on high-level workflow management. Giving it the ability to read files by default causes the context to become filled with file reads, hampering its ability to remain focused on orchestration. The design philosophy is that subtasks should handle the detailed work and return only the necessary information (via their completion summaries) for the orchestrator to delegate further tasks effectively.\n\nThis limitation helps prevent [context poisoning](https://docs.roocode.com/advanced-usage/context-poisoning), where irrelevant or excessive information contaminates the model's active context, leading to degraded performance and task deviation.\n\n### How can I override Orchestrator mode's limitations? [‚Äã](https://docs.roocode.com/features/boomerang-tasks\\#how-can-i-override-orchestrator-modes-limitations \"Direct link to How can I override Orchestrator mode's limitations?\")\n\nYou can [customize the Orchestrator mode](https://docs.roocode.com/features/custom-modes) to add capabilities like file reading by following the [configuration precedence](https://docs.roocode.com/features/custom-modes#configuration-precedence) system:\n\n1. Open the Command Palette and select **\"Edit Global Modes\"**\n2. Copy and paste this configuration:\n\n```codeBlockLines_e6Vv\n{\n  \"customModes\": [\\\n    {\\\n      \"slug\": \"orchestrator\",\\\n      \"name\": \"ü™É Orchestrator\",\\\n      \"roleDefinition\": \"You are Roo, a strategic workflow orchestrator who coordinates complex tasks by delegating them to appropriate specialized modes. You have a comprehensive understanding of each mode's capabilities and limitations, allowing you to effectively break down complex problems into discrete tasks that can be solved by different specialists.\",\\\n      \"customInstructions\": \"Your role is to coordinate complex workflows by delegating tasks to specialized modes. As an orchestrator, you should:\\n\\n1. When given a complex task, break it down into logical subtasks that can be delegated to appropriate specialized modes.\\n\\n2. For each subtask, use the `new_task` tool to delegate. Choose the most appropriate mode for the subtask's specific goal and provide comprehensive instructions in the `message` parameter. These instructions must include:\\n    *   All necessary context from the parent task or previous subtasks required to complete the work.\\n    *   A clearly defined scope, specifying exactly what the subtask should accomplish.\\n    *   An explicit statement that the subtask should *only* perform the work outlined in these instructions and not deviate.\\n    *   An instruction for the subtask to signal completion by using the `attempt_completion` tool, providing a concise yet thorough summary of the outcome in the `result` parameter, keeping in mind that this summary will be the source of truth used to keep track of what was completed on this project. \\n    *   A statement that these specific instructions supersede any conflicting general instructions the subtask's mode might have.\\n\\n3. Track and manage the progress of all subtasks. When a subtask is completed, analyze its results and determine the next steps.\\n\\n4. Help the user understand how the different subtasks fit together in the overall workflow. Provide clear reasoning about why you're delegating specific tasks to specific modes.\\n\\n5. When all subtasks are completed, synthesize the results and provide a comprehensive overview of what was accomplished.\\n\\n6. Ask clarifying questions when necessary to better understand how to break down complex tasks effectively.\\n\\n7. Suggest improvements to the workflow based on the results of completed subtasks.\\n\\nUse subtasks to maintain clarity. If a request significantly shifts focus or requires a different expertise (mode), consider creating a subtask rather than overloading the current one.\",\\\n      \"groups\": [\\\n        \"read\"\\\n      ],\\\n      \"source\": \"global\"\\\n    }\\\n  ]\n}\n\n```\n\n3. Save the file. Your global Orchestrator mode will now have read capabilities.\n\nwarning\n\nAdding capabilities to the Orchestrator mode should be done thoughtfully. The limited default capabilities help maintain focus on orchestration rather than implementation details.\n\n## Footnotes [‚Äã](https://docs.roocode.com/features/boomerang-tasks\\#footnote-label \"Direct link to Footnotes\")\n\n1. This context is passed via the `message` parameter of the [`new_task`](https://docs.roocode.com/advanced-usage/available-tools/new-task) tool when the Orchestrator mode delegates the task. [‚Ü©](https://docs.roocode.com/features/boomerang-tasks#user-content-fnref-1)\n\n2. The mode for the subtask is specified via the `mode` parameter of the [`new_task`](https://docs.roocode.com/advanced-usage/available-tools/new-task) tool during initiation by the Orchestrator mode. [‚Ü©](https://docs.roocode.com/features/boomerang-tasks#user-content-fnref-2)\n\n3. This summary is passed via the `result` parameter of the [`attempt_completion`](https://docs.roocode.com/advanced-usage/available-tools/attempt-completion) tool when the subtask finishes. [‚Ü©](https://docs.roocode.com/features/boomerang-tasks#user-content-fnref-3)\n\n\n[Edit this page](https://github.com/RooCodeInc/Roo-Code-Docs/edit/main/docs/features/boomerang-tasks.mdx)\n\nLast updated on **Oct 3, 2025**\n\n[Previous\\\\\n\\\\\nAuto-Approving Actions](https://docs.roocode.com/features/auto-approving-actions) [Next\\\\\n\\\\\nBrowser Use](https://docs.roocode.com/features/browser-use)\n\n- [Why Use Boomerang Tasks?](https://docs.roocode.com/features/boomerang-tasks#why-use-boomerang-tasks)\n- [How It Works](https://docs.roocode.com/features/boomerang-tasks#how-it-works)\n- [Key Considerations](https://docs.roocode.com/features/boomerang-tasks#key-considerations)\n- [Frequently Asked Questions](https://docs.roocode.com/features/boomerang-tasks#frequently-asked-questions)\n  - [Why can't Orchestrator mode read files, write files, call MCPs, or run commands?](https://docs.roocode.com/features/boomerang-tasks#why-cant-orchestrator-mode-read-files-write-files-call-mcps-or-run-commands)\n  - [How can I override Orchestrator mode's limitations?](https://docs.roocode.com/features/boomerang-tasks#how-can-i-override-orchestrator-modes-limitations)\n\n![Roo Code Logo](https://docs.roocode.com/img/roo-code-logo-dark.png)\n\nEmpowering developers to build better software faster with AI-powered tools and insights.\n\n[GitHub](https://github.com/RooCodeInc/Roo-Code)[Discord](https://discord.gg/roocode)[Reddit](https://www.reddit.com/r/RooCode/)[X (Twitter)](https://x.com/roo_code)[LinkedIn](https://www.linkedin.com/company/roo-code)[TikTok](https://www.tiktok.com/@roo.code)[Bluesky](https://bsky.app/profile/roocode.bsky.social)\n\nGitHub\n\n- [Issues](https://github.com/RooCodeInc/Roo-Code/issues)\n- [Feature Requests](https://github.com/RooCodeInc/Roo-Code/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop)\n\nDownload\n\n- [VS Code Marketplace](https://marketplace.visualstudio.com/items?itemName=RooVeterinaryInc.roo-cline)\n- [Open VSX Registry](https://open-vsx.org/extension/RooVeterinaryInc/roo-cline)\n\nCompany\n\n- [Contact](mailto:support@roocode.com)\n- [Careers](https://careers.roocode.com/)\n- [Website Privacy Policy](https://roocode.com/privacy)\n- [Extension Privacy Policy](https://github.com/RooCodeInc/Roo-Code/blob/main/PRIVACY.md)\n\nLike most of the internet, we use cookies. Are you OK with that?\n\nDeclineAccept",
  "metadata": {
    "og:url": "https://docs.roocode.com/features/boomerang-tasks",
    "title": "Boomerang Tasks: Orchestrate Complex Workflows | Roo Code Documentation",
    "twitter:card": "summary_large_image",
    "ogDescription": "Learn how to use Boomerang Tasks (Orchestrator mode) to automate complex workflows by delegating subtasks to specialized modes.",
    "twitter:site": "@roo_code",
    "docsearch:language": "en",
    "favicon": "https://docs.roocode.com/img/favicon.ico",
    "docusaurus_locale": "en",
    "generator": "Docusaurus v3.9.2",
    "ogTitle": "Boomerang Tasks: Orchestrate Complex Workflows | Roo Code Documentation",
    "ogUrl": "https://docs.roocode.com/features/boomerang-tasks",
    "docsearch:docusaurus_tag": "docs-default-current",
    "og:locale": "en_US",
    "language": "en",
    "twitter:creator": "@roo_code",
    "docsearch:version": "current",
    "og:title": "Boomerang Tasks: Orchestrate Complex Workflows | Roo Code Documentation",
    "description": "Learn how to use Boomerang Tasks (Orchestrator mode) to automate complex workflows by delegating subtasks to specialized modes.",
    "ogImage": "https://docs.roocode.com/img/social-share.jpg",
    "og:type": "website",
    "twitter:image": "https://docs.roocode.com/img/social-share.jpg",
    "docusaurus_version": "current",
    "og:image": "https://docs.roocode.com/img/social-share.jpg",
    "docusaurus_tag": "docs-default-current",
    "ogLocale": "en_US",
    "keywords": "Boomerang Tasks,Orchestrator mode,workflow automation,task delegation,automated workflows",
    "og:description": "Learn how to use Boomerang Tasks (Orchestrator mode) to automate complex workflows by delegating subtasks to specialized modes.",
    "viewport": [
      "width=device-width, initial-scale=1.0",
      "width=device-width, initial-scale=1"
    ],
    "scrapeId": "bece99ad-5e95-434a-ac39-6e4d2490ddf6",
    "sourceURL": "https://docs.roocode.com/features/boomerang-tasks",
    "url": "https://docs.roocode.com/features/boomerang-tasks",
    "statusCode": 200,
    "contentType": "text/html; charset=utf-8",
    "proxyUsed": "basic",
    "cacheState": "miss",
    "creditsUsed": 1
  }
}